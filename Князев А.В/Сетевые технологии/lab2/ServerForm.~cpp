//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ServerForm.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------
//низко-уровневые процедуры: чтение заданной строки, чтение строки до разделителя, чтение разделителя
bool parse_const_string(char* &p,char* s)
{
        while(*s!=0)
        if(*p!=*s) return false;
        else { p++; s++; }
        return true;
}
void parse_string(char* &p,char* id)
{
        while(*p!='\r'&&*p!='\n'&&*p!=' '&&*p!='\t'&&*p!='\0')
        {
                *id=*p;
                p++;
                id++;
        }
        *id=0;
}
void parse_delimiter(char* &p)
{
        while(*p=='\r'||*p=='\n'||*p==' '||*p=='\t') p++;
}
char database[100];
char table[100];
struct Condition
{
        char field[100];
        char compare_indicator;
        char constant[100];
        //todo: and or ( )
        ~Condition() {}
} *condition;
void parse_condition(char* &p, Condition* &c)
{
        c=new Condition();
        parse_string(p,c->field);
        parse_delimiter(p);
        c->compare_indicator=*p;
        p++;
        parse_delimiter(p);
        parse_string(p,c->constant);
}
void __fastcall TForm1::ServerSocket1ClientRead(TObject *Sender,
      TCustomWinSocket *Socket)
{
        char buffer[500];
        buffer[0]=0;
        //strcpy(buffer,Socket->ReceiveText().c_str());
        buffer[Socket->ReceiveBuf(buffer,500)]=0;
        //parse buffer!
        char* p=buffer;
        //{u{se }(.*){\r\n,\0},s{elect * from }(.*)[{ where }(.*){=,<,>}(#)[{or,and} ...]]}
        while(*p!=0)
        switch(*p)
        {
        case 'u':
        case 'U':
                {
                        p++;
                        if(!parse_const_string(p,"se")) return;
                        parse_delimiter(p);
                        parse_string(p,database);
                        parse_delimiter(p);
                        break;
                }
        case 's':
        case 'S':
                {
                        p++;
                        if(!parse_const_string(p,"elect * from")) return;
                        parse_delimiter(p);
                        parse_string(p,table);
                        parse_delimiter(p);
                        if(*p=='w'||*p=='W')
                        {       p++;
                                if(!parse_const_string(p,"here")) return;
                                parse_delimiter(p);
                                parse_condition(p,condition);
                                parse_delimiter(p);
                        }
                        buffer[0]=0;
                        strcat(buffer,database);
                        strcat(buffer,"\\");
                        strcat(buffer,table);
                        strcat(buffer,".txt");
                        FILE* f=fopen(buffer,"r");
                        buffer[0]=0;
                        p=buffer;
                        while(!feof(f))
                        {
                                fgets(p,500,f);
                                p+=strlen(p);
                        }
                        fclose(f);
                        //todo:delete rows under condition
                        Socket->SendBuf(buffer,(int)(buffer-p));
                }
        }
        //load content
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N3Click(TObject *Sender)
{
MessageBoxA(Form1->Handle,"Модель SQL-сервера.\r\nВинников А. М., гр. А-14-07\r\nУ сервера есть несколько баз данных (совокупностей таблиц с записями).\r\nКлиент посылает команду use <имя БД>.-Сервер выбирает БД и в ответ\r\nвозвращает квитанцию. Затем клиент посылает запрос 'select * from\r\n<имя табл.> where <условие>'. - Сервер возвращает требуемые записи.","О программе",MB_OK);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N4Click(TObject *Sender)
{
Form1->Close();
}
//---------------------------------------------------------------------------

