      @ <Y>,<X> TO <YY>,<XX> [DOUBLE | PANEL | <Список символов>] 
[COLOR SCHEME <ВырN> | COLOR <Список цветовых пар>]   рисует
прямоугольник или линию на экране или в окне. <Y>,<X> (<YY>,<XX>) 
- координаты левого верхнего (правого нижнего) угла прямоугольника.
Если <Y>=<YY>, рисуется горизонтальная, а если <X>=<XX> -
вертикальная линия. По умолчанию контур и линия одинарные. Опция
DOUBLE (PANEL) задает двойную рамку (рамку в виде сплошной полосы).
Опция <Список символов> задает символы для рисования рамки в такой
последовательности: верх, низ рамки, левая сторона, правая сторона,
левый верхний угол, правый верхний угол, левый нижний угол, правый
нижний угол. Каждый символ представляют в виде <ВырC> или
заключают в квадратные скобки. Пример: '=','=','│','│','+','+','+','+'.
      ACCEPT [<ВырC>] TO <Имя>  вводит символьные данные (без 
заключения в кавычки совокупности символов) в переменную или
элемент массива. Необязательное приглашение к вводу <ВырC> выводится,
начиная с текущей позиции курсора, а справа - вводимые символы (в
отсутствие приглашения они предъявляются, начиная с текущей позиции
курсора). Коды символов поступают в буфер клавиатуры, при нажатии
Enter строка, накопленная в буфере, присваивается переменной <Имя>.
Если переменной <Имя> не было, она создается. Нажатие Esc вместо
Enter, освобождая буфер, создает переменную <Имя> со значением пустой
строки, если не действует установка SET ESCAPE ON (при ее действии
программа прерывается от нажатия Esc).
      ACTIVATE MENU <Имя BAR-меню> [NOWAIT] [PAD <Имя пункта>]
выводит на дисплей предварительно определенное BAR-меню и активирует
линейку меню, причем световым маркером выделяется пункт, указанный
в опции PAD (по умолчанию выделяется пункт, описанный первым). Маркер
можно переместить на другой пункт. Выполнение программы 
приостанавливается, пока не будет выбран выделенный пункт
(нажатием кнопки мыши, Enter или Space) или нажата клавиша Esc (деактивация
линейки меню без выполнения выбора). Опция NOWAIT отменяет приостановку
программы. В этом случае меню активно, а выбор в нем производят в
любом месте, где программа остановится, ожидая ввод с клавиатуры 
(например, при достижении команды READ).
     ACTIVATE POPUP <Имя меню> [AT <Y>,<X>] [BAR<Номер>] [NOWAIT] [REST]
выводит на дисплей предварительно определенное POPUP-меню и активирует
его, причем световым маркером выделяется пункт с указанным <Номером>
(по умолчанию первый). Клавишами-стрелками "вверх", "вниз" маркер
можно перемещать с одного пункта на другой. Позицию меню в окне или
на экране (левый верхний угол области меню) задает опция AT (в ее
отсутствие позиция определяется описанием меню). Опция REST
используется, если пункты меню соответствуют записям БД и нужно,
чтобы в нем был выделен пункт для текущей записи. Выбор пункта и опция  
NOWAIT объяснены в команде ACTIVATE MENU.
     ACTIVATE SCREEN восстанавливает вывод на экран, которое как бы
становится текущим окном выдачи. Поскольку имевшиеся окна остаются на
дисплее, вывод может быть закрыт ими. Чтобы его посмотреть, надо 
нажать и придерживать клавиши Alt+Ctrl+Shift, осуществляющие временное
скрытие окон.
     ACTIVATE WINDOW <Список имен окон> | ALL  [NOSHOW]
[IN [WINDOW] <Имя окна> | IN SCREEN]  [BOTTOM | TOP | SAME] выводит на
дисплей указанные в <Cписке> ранее определенные окна (все определенные
окна, если задано ALL), причем последнее в списке (определенное
последним - в случае опции ALL) окно становится текущим окном выдачи
- на него направлен поток вывода. Предшествующее окно является
возможным преемником окна выдачи (при деактивации последнего). Однако,
записав новую команду ACTIVATE WINDOW, можно сделать окном выдачи
любое окно, в том числе выведенное на дисплей предыдущей такой командой.
Опция NOSHOW позволяет сделать активное окно скрытым (невидимым),
которое тем не менее может быть окном выдачи. Возобновить показ окна
можно командой SHOW WINDOW. Вложения окон могут быть заданы при их
определении. Опция IN [WINDOW], указывающая "родительское" окно 
для активируемых окон, более приоритетна. Аналогично, опция IN SCREEN
("расположить на экране") может отменить ранее определенное вложение
активируемых окон. Опция BOTTOM (TOP) важна в случае перекрытия окон
и помещает активируемые окна в конец (начало) стека окон, в котором
могут быть окна, активированные ранее. Окном переднего плана (оно
не бывает перекрыто другим окном) является окно в начале (верхушке)
стека окон. Опция SAME восстанавливает прежнее положение в стеке
окон, которые были активированы и затем скрыты. 
     APPEND [BLANK]  добавляет пустую запись в конец активной БД
или вызывает окно Open File, с помощью которого можно выбрать и
сделать активной БД, и добавляет запись, причем в отсутствие
атрибута BLANK на экране появляется окно редактирования и можно
задать значения полей новой записи. Команда APPEND BLANK не
прерывает выполнения программы; заполнение полей новой записи
осуществляется программным путем либо окно редактирования будет
открыто последующей командой BROWSE, CHANGE или EDIT.
     APPEND FROM <ИмяФ> | ?  [FIELDS <Список полей>] [<FOR-условие>]
[TYPE <Тип файла>] добавляет в конец активной БД записи, заполняемые
данными из другого файла. Опция "?", открывающая окно Open File,
позволяет выбирать файл-источник из списка файлов, предъявляемого в
окне. Если источником данных является другая БД,
предполагается, что структуры этой и активной БД имеют пересечение.
Добавленные записи заполняются в той мере, каково пересечение. Если
структуры полностью различаются, команда без опций добавляет в 
активную БД пустые записи по числу записей в БД-источнике. Если в 
данных БД  n полей, одинаковых по названиям и типам, только эти поля 
и заполняются в добавляемых записях. Опцию FIELDS задают, если хотят 
ограничить объем передаваемых данных указанными в <Списке> полями 
(множество идентичных полей рассматриваемых БД может быть шире).
  <FOR-условие> позволяет сделать выборку необходимых данных
файла-источника. Пример: APPEND FROM Student FOR NOT Deleted().
Опцию TYPE <Тип файла>  задают, если источником не является БД. 
<Тип файла> имеет следующие варианты:
  DELIMITED обозначает текстовый файл, каждая строка которого содержит
данные одной записи, причем значения полей разделяются запятыми,
символьные значения заключены в кавычки: "ИВАНОВ И.И.";
  DELIMITED WITH BLANK  отличается от варианта "DELIMITED" тем, 
что значения полей разделены не запятыми, а пробелами; 
  DELIMITED WITH TAB в отличие от варианта "DELIMITED" использует 
символы табуляции для разделения значений полей;
  DELIMITED WITH <Разделитель>   в отличие от варианта "DELIMITED" 
использует символ <Разделитель> для разделения значений полей;
  SDF обозначает текстовый ASCII-файл, каждая строка которого содержит
данные одной записи, причем значения полей не разделяются. Поэтому
достаточно сдвига на 1 позицию, чтобы исказить все следующие значения
полей. Пример:  ИВАНОВ И.И.           1940МУЖОГМ . При наборе текста
важно не исказить размеры полей, набирая первую строку: следующие
строки можно набирать по этому образцу.
  Прочие варианты перечислим через запятую, указав в скобках 
расширения имен соответствующих файлов: DIF (.dif), FW2 (.fw2), 
MOD (.mod), PDOX (.db), RPD (.rpd), SYLK (нет расширения по умолчанию),
WK1 (.wk1), WK3 (.wk3), WKS (.wks), WR1 (.wr1), WRK (.wrk), XLS (.xls).
     APPEND FROM ARRAY <Мас> [<FOR-условие>] [FIELDS <Список полей>]
дополняет активную БД записями, каждая из которых заполняется 
значениями из соответствующей строки массива <Мас>: поля записи
получают значения по порядку их указания в <Списке полей> или, если
атрибут FIELDS со <Списком полей> опущен, по порядку их описания в
структуре БД. Поля, не указанные в <Списке полей>, остаются пустыми
в добавляемых записях.
    Если имеется <FOR-условие>, строка массива сначала проверяется
на соответствие этому условию, и в случае получения .T.("истина")
формируется очередная запись,т.е. производится отбор строк. Хотя
проверяются элементы строки массива, в <FOR-условии> должны фигурировать 
соответствующие им поля записи. Если в массиве больше столбцов, чем
полей в БД, лишние столбцы игнорируются.
   Если <Мас> одномерный массив, в БД добавляется единственная запись
(массив используется как строка двумерного массива). 
Предупреждение. Несоответствие типа элемента массива типу заполняемого
поля не рассматривается как ошибка, в БД оказывается "чужеродный" 
элемент или значение по умолчанию и ошибка может проявиться позднее,
поэтому будьте внимательны, а также предусматривайте контроль.
    APPEND MEMO <Имя Memo-поля> FROM <ИмяФ> [OVERWRITE]
дополняет содержание указанного Memo-поля текстом файла <ИмяФ> или,
если указана опция OVERWRITE, полностью обновляет Memo-поле, занося 
в него указанный текст. <ИмяФ> должно указываться с расширением,
если оно имеется. 
    BROWSE [LAST] [TITLE <ВырC >] [FIELDS <Список полей>] [NOWAIT]
[WIDTH <ВырN >] [<FOR-условие>] [REST]  [KEY<ВырN > [,<ВырN >]] 
[NOAPPEND] [NOEDIT | NOMODIFY] [FREEZE <Имя поля>] [NODELETE]
[FORMAT]  [WHEN <ВырL >]   [VALID [F:] <ВырL > [ERROR <ВырC >]]
[LOCK <ВырN >] [NORGRID] [NOLGRID] [PARTITION <ВырN >] [LPARTITION]
[NOLINK] [LEDIT] [REDIT] [NOREFRESH] [NOOPTIMIZE] [NOCLEAR] [NOMENU]
[NORMAL] [WINDOW <Имя окна >] [IN [WINDOW] <Имя окна > | IN SCREEN] ]
[COLOR SCHEME <ВырN > | COLOR <Список цветовых пар>]
[TIMEOUT <ВырN >] [SAVE] [PREFERENCE <ВырC >]
открывает окно редактирования и выводит на дисплей записи базы данных,
создавая состояние ожидания, необходимое для их редактирования, если
опция NOWAIT не задана. При опции NOWAIT программа продолжает работу,
пока состояние ожидания не будет создано другой командой, например
READ, и можно будет заняться редактированием. В изображаемой на
дисплее BROWSE-таблице записи представлены строками, поля - столбцами.
В таблицу выводятся поля, указанные в <Списке полей> (по умолчанию
- все поля БД). Все столбцы таблицы могут не уместиться на дисплее,
и тогда используется скроллинг.
    Элемент <Списка полей> - это <Имя поля><Набор ключей>
(рассмотрены на с. 311). В нем можно указывать и выражения (так
называемые вычисляемые поля). Параметр WIDTH <ВырN > позволяет
ограничить ширину ячейки таблицы значением <ВырN >. В этом случае
для просмотра значений большей, чем <ВырN > длины, используется
скроллинг в пределах ячейки таблицы. Чтобы не подвергать случайным
изменениям поля, можно указать единственное редактируемое поле в
опции FREEZE. Изменение прочих полей будет блокировано. Опция
NOEDIT (или NOMODIFY) запрещает прямое редактирование таблицы
(возможно ее изменение через функции пользователя, подключаемые к
BROWSE). Если редактирования нет, имеет смысл отменить регулярно
производимое обновление таблицы, указав опцию NOREFRESH.
    Нажатие клавиш Ctrl+N добавляет запись в конец таблицы. В нее
копируются поля текущей записи, если действует установка SET CARRY 
ON (можно задать выборочное копирование, указав необходимые поля:
SET CARRY TO <Список полей>). Опция NOAPPEND отменяет использование
клавиш Ctrl+N для добавления записей. Опция NODELETE отменяет
использование клавиш Ctrl+T для пометки текущей записи на удаление.
    Выделение подмножества записей, отображаемых таблицей,
производят с помощью FOR-условия или опции KEY. Совместно с
FOR-условием используется опция REST, предотвращающая повторную
фильтрацию записей с самого начала БД при новом вызове BROWSE-
таблицы, когда курсор надо оставить в прежней строке. Опция KEY
обеспечивает быструю выдачу на дисплей записей с ключами в
диапазоне от <Выр > до <Выр > (соответствующий индекс должен
быть ведущим). 
    Опция WHEN <ВырL > управляет доступом к записи: если <ВырL >=.F.,
запись недоступна для редактирования. Опция VALID <ВырL > выполняет
"завершающий" контроль записи: если некоторые условия не выполнены
и <ВырL >=.F., попытка вывести курсор из строки вызывает сообщение
<ВырC > об ошибке или системное сообщение Invalid Input (в
отсутствие <ВырС >, а курсор остается в строке. Контролируются 
измененные записи, а чтобы контролировать все, надо записать ключ 
:F после слова VALID. 
    В момент выполнения BROWSE может иметься окно выдачи, тогда
таблица выводится в него. Опция WINDOW <Имя окна >, указывающая
ранее определенное окно, имеет больший приоритет: таблица
выводится в окне <Имя окна >, которое автоматически активируется.
При этом окно BROWSE "наследует" все его свойства, например,
перемещаемость, возможность изменения размеров. Опция NORMAL
также отменяет вывод таблицы в окно выдачи. При этом окно BROWSE
приобретает свойства системного.  Опция IN [WINDOW] <Имя окна >
помещает окно BROWSE в ранее определенное и обязательно видимое
"родительское" окно, свойства которого не имеют отношения к
свойствам окна BROWSE. Последнее как бы в ловушке: изменение его
размеров ограничено и положение на экране будет меняться с
перемещением "родительского".
    С помощью опции TIMEOUT <ВырN > задают число секунд ожидания
ввода. Если в течение этого времени ввода не было, окно BROWSE
автоматически закрывается. Опция NOCLEAR обеспечивает сохранение
на дисплее образа окна BROWSE (заключительное состояние) после 
его закрытия. Опция NOMENU препятствует порождению подменю BROWSE
системного меню, одновременно подавляется действие клавиш Ctrl+N,
Ctrl+T (см. выше). Опция NOOPTIMIZE отменяет оптимизацию доступа
к записям. Опция SAVE сохраняет окно BROWSE после выхода из
команды BROWSE и к нему можно возвращаться после работы в
других окнах. 
    При закрытии окна BROWSE опции команды и все изменения
конфигурации окна запоминаются в файле FOXUSER.DBF. Выполнение
команды BROWSE LAST происходит в соответствии с этой информацией.
Опция 