
               
                    Команды языка FOXPRO
                    
С.273  \ <Фрагмент текста>   выводит на дисплей заданный фрагмент, 
заканчивая вывод возвратом каретки и переводом строки. Осуществляет 
слияние текста, заданного непосредственно, с символьным представлением
выражений, ограниченных слева знаками <<, а справа - >>, если
действует режим SET TEXTMERGE ON. Пример.
             SET  TEXTMERGE  ON
             \ Текущая дата:<< Date() >>             
Результат выполнения команд \, \\ будет накапливаться в файле вывода
<ИмяФ>, если перед выводом выполнить команду SET TEXTMERGE TO <ИмяФ>.             
С.273  \\ <Фрагмент текста> - подобна предыдущей команде, но не
добавляет в конец вывода символы возврата каретки и перевода строки.
      ?|??  [<Выр > [ PICT <ВырС >] [FUNCTION <ВырC >] [AT<ВырN >] 
[STYLE <ВырN >]  [, <Выр > ... ]]  выводит значения списка выражений
<Выр >, <Выр >, ...  на экран и/или на принтер, при этом команда "?"
посылает в начале вывода символы возврата каретки и перевода строки
и тем самым вывод по умолчанию начинается с самой левой колонки.
Аргументы команд необязательны, в их отсутствие выводится строка "", 
но и в этом случае команда "?" посылает возврат каретки, перевод 
строки (пропуск строки). <ВырC > представляет SAY-формат (см. п. 1.12), 
<ВырC > отличается от <ВырC > лишь отсутствием знака @ в начале. При 
записи одного из них нет смысла записывать другое. Опция AT позволяет 
выводить <Выр > с <ВырN >-й колонки, что удобно при выводе таблиц.
Опция STYLE задает шрифт при выводе на принтер, в остальных случаях
игнорируется. Выводимые значения автоматически разделяются пробелами.
   Команда "??" выполняет вывод, начиная с текущей позиции.
     ??? <ВырC>  направляет управляющие коды (<ВырC>) прямо на принтер,
минуя драйвер принтера. Они позволяют изменять тип и размер шрифта,
межзнаковые и межстрочные промежутки, интенсивность (жирность) печати
и т.п. и могут различаться для принтеров разных типов. Управляющий
код можно задать как аргумент функции Chr() или в скобках {}.
С.335  @<X>,<Y> [SAY <Выр > [PICT <SAY-шаблон>] [COLOR SCHEME <ВырN >|
COLOR<Список цветовых пар>]]  [GET <Get-переменная> PICT <GET-шаблон>
[DEFAULT <Выр >]  [COLOR SCHEME <ВырN > | COLOR <Список цветовых пар>] 
[ENABLE | DISABLE]  [MESSAGE <ВырC >]  [[OPEN] WINDOW <Имя окна> ]
[SIZE <ВырN >,<ВырN >] [WHEN <ВырL >]  [RANGE [<ВырN >] [,<ВырN >]]  
[VALID <ВырL >|<ВырN > [ERROR <ВырC >]]  выполняет вывод и/или ввод
по указанным координатам <X>,<Y>. Составляющая SAY, используя заданные 
цвета или цвета по умолчанию, выводит выражение <Выр >, приведенное к 
символьному виду и отформатированное, если задан SAY-шаблон. 
Примечание. Вместо или наряду с опцией PICTURE (сокращенно PICT)
может использоваться опция FUNCTION, в которой <ВырC> отличается
от SAY-шаблона лишь отсутствием знака @ в начале.
   Составляющая GET, используя собственные цветовые опции, выводит
справа от вывода SAY, в так называаемое GET-поле, значение Get-
переменной, отформатированное, если задан GET-шаблон. Get-переменной
может быть элемент массива, простая переменная, поле БД, включая
Memo-поле (при условии, что опцией [OPEN] WINDOW указано окно, ранее
определенное для размещения текста Memo-поля). Действие указываемых
ниже опций обеспечивается следующей после @ ... GET командой READ. 
Опция WHEN разрешает редактирование в GET-поле, если <ВырL > =.T.. 
Опции RANGE и VALID разрешают передачу отредактированного значения в 
Get-переменную, если оно не меньше <ВырN > и не больше <ВырN > (опция 
RANGE) и если <ВырL > =.T. (опция VALID). Опция ERROR обеспечивает 
вывод собственного сообщения <ВырC > об ошибке, когда <ВырL > =.F..
Опция DEFAULT создает и инициализирует Get-переменную, не являющуюся 
элементом массива или полем БД, если она не создана ранее. Элементу
массива следует задавать значение нужного типа (по умолчанию это .F.)
до команды @ ... GET.  Опция DISABLE запрещает доступ к GET-полю для
редактирования (впоследствии доступ может быть разрешен). В опции
MESSAGE указывают сообщение <ВырC >, которое будет выведено в последнюю
строку окна (экрана), когда GET-поле будет выбрано для редактирования.
Опция SIZE задает высоту <ВырN > и ширину <ВырN > GET-поля. По умолчанию
высота равна 1. Опция удобна при редактировании длинных строк и Memo-полей.
С.344  @ <Y>,<X> EDIT <Переменная> SIZE <ВырN >,<ВырN > [,<ВырN >]
[DEFAULT <Выр >] [COLOR SCHEME <ВырN > | COLOR <Список цветовых пар>]
[PICT <ВырC >]  [ENABLE | DISABLE]  [MESSAGE <ВырC >]  [WHEN <ВырL >]
[VALID <ВырL > [ERROR <ВырC >]]  [NOMODIFY]  [SCROLL]  [TAB]
создает прямоугольную область высотой <ВырN > и шириной <ВырN > 
(EDIT-область) для редактирования текста <Переменной> - Memo-поля 
или поля типа C, символьной переменной, элемента массива. Опция 
NOMODIFY запрещает прямое изменение текста (но через функцию пользователя 
оно возможно). Опция SCROLL выводит справа от области полосу прокрутки. 
Назначением по умолчанию клавиши Tab является выход из редактирования. 
Опция TAB его отменяет, клавиша Tab используется для вставки символов 
табуляции, а выход из редактирования производят клавишами Ctrl+Tab. 
<ВырC > имеет лишь 2 варианта: "@I" (центрирование текста в строках
EDIT-области) и "@J" (выравнивание текста по правому краю); по
умолчанию текст выравнивается по левому краю. Прочие опции аналогичны
опциям в @ ... GET (см. выше).
    @ <Y>,<X>, <YY>,<XX> BOX [<ВырC>]  рисует прямоугольник на экране
или в окне. Опция <ВырC> содержит 1, 8 или 9 символов. По одному
символу используется для изображения каждого угла, по одному - для
каждой стороны, а 9 символ (если есть) служит для заполнения
прямоугольника (если задан всего 1 символ, например *, то рамка
прямоугольника им и изображается). Последовательность символов в
<ВырC> - в порядке обхода прямоугольника по часовой стрелке,
начиная с левого верхнего угла. По умолчанию прямоугольник рисуется
одинарной линией и заполняется пробелами. 
    @ <Y>,<X> [CLEAR | CLEAR TO <YY>,<XX>] очищает область экрана
или активного окна. Варианты: @ <Y>,<X>  очищает строку <Y>, 
начиная со столбца <X>;  @ <Y>,<X> CLEAR  очищает прямоугольную
область, левый верхний угол которой задан координатами <Y>,<X>,
а правый нижний - совпадает с правым нижним углом окна (экрана);
аналогично  @ <Y>,<X> CLEAR TO <YY>,<XX>  очищает прямоугольник
с явно указанными координатами <YY>,<XX> правого нижнего угла.
    @ <Y>,<X> FILL TO <YY>,<XX> [COLOR SCHEME <ВырN> | COLOR
<Список цветовых пар>]  в соответствии с указанной в ней цветовыми
характеристиками изменяет цвета существующего текста в
прямоугольной области экрана, заданной координатами <Y>,<X>
(<YY>,<XX>) левого верхнего (правого нижнего) угла, однако любой
текст, который будет выводиться в эту область после выдачи команды,
изображается цветом по умолчанию. Если опция опущена, происходит
очистка заданной прямоугольной области.
    @ <Y>,<X> MENU <МасC>, <ВырN >[,<ВырN >] [TITLE <ВырC>] [SHADOW] 
создает в окне или на экране вертикальное FOX-меню с пунктами - 
элементами массива <МасC>, занимающее обрамленную прямоугольную область, 
левый верхний угол которой имеет координаты <Y>,<X>, а размеры 
определяются автоматически по числу <ВырN > пунктов и максимальному 
числу символов в одном пункте. <ВырN > может быть меньше размера 
<МасC>; в этом случае используются <ВырN > начальных элементов <МасC>. 
Можно задать число <ВырN > пунктов, выводимых на дисплей ("запас" не 
возбраняется, если же <ВырN > < <ВырN >, в меню используется прокрутка).
<ВырC> представляет заголовок, выводимый в верхней строке области меню. 
Опция SHADOW обеспечивает "тень" справа и снизу возле рамки. Активация
меню проиводится командой READ MENU TO <Переменная>.
     @ <Y>,<X> PROMPT <ВырC > MESSAGE <ВырC > создает в окне или на
экране один пункт светового меню, левый край приглашения которого 
имеет координаты <Y>,<X>. Меню, состоящее из такого рода пунктов, 
активируется командой MENU TO <Переменная>, при этом в строке,
назначенной командой SET MESSAGE TO, появится пояснение <ВырC >
(если команда и сообщение предусмотрены) 
      @ <Y>,<X> TO <YY>,<XX> [DOUBLE | PANEL | <Список символов>]
[COLOR SCHEME <ВырN> | COLOR <Список цветовых пар>]   рисует
прямоугольник или линию на экране или в окне. <Y>,<X> (<YY>,<XX>) 
- координаты левого верхнего (правого нижнего) угла прямоугольника.
Если <Y>=<YY>, рисуется горизонтальная, а если <X>=<XX> -
вертикальная линия. По умолчанию контур и линия одинарные. Опция
DOUBLE (PANEL) задает двойную рамку (рамку в виде сплошной полосы).
Опция <Список символов> задает символы для рисования рамки в такой
последовательности: верх, низ рамки, левая сторона, правая сторона,
левый верхний угол, правый верхний угол, левый нижний угол, правый
нижний угол. Каждый символ представляют в виде <ВырC> или
заключают в квадратные скобки. Пример: '=','=','│','│','+','+','+','+'.
      ACCEPT [<ВырC>] TO <Имя>  вводит символьные данные (без 
заключения в кавычки совокупности символов) в переменную или
элемент массива. Необязательное приглашение к вводу <ВырC> выводится,
начиная с текущей позиции курсора, а справа - вводимые символы (в
отсутствие приглашения они предъявляются, начиная с текущей позиции
курсора). Коды символов поступают в буфер клавиатуры, при нажатии
Enter строка, накопленная в буфере, присваивается переменной <Имя>.
Если переменной <Имя> не было, она создается. Нажатие Esc вместо
Enter, освобождая буфер, создает переменную <Имя> со значением пустой
строки, если не действует установка SET ESCAPE ON (при ее действии
программа прерывается от нажатия Esc).
      ACTIVATE MENU <Имя BAR-меню> [NOWAIT] [PAD <Имя пункта>]
выводит на дисплей предварительно определенное BAR-меню и активирует
линейку меню, причем световым маркером выделяется пункт, указанный
в опции PAD (по умолчанию выделяется пункт, описанный первым). Маркер
можно переместить на другой пункт. Выполнение программы 
приостанавливается, пока не будет выбран выделенный пункт
(нажатием кнопки мыши, Enter или Space) или нажата клавиша Esc (деактивация
линейки меню без выполнения выбора). Опция NOWAIT отменяет приостановку
программы. В этом случае меню активно, а выбор в нем производят в
любом месте, где программа остановится, ожидая ввод с клавиатуры 
(например, при достижении команды READ).
     ACTIVATE POPUP <Имя меню> [AT <Y>,<X>] [BAR<Номер>] [NOWAIT] [REST]
выводит на дисплей предварительно определенное POPUP-меню и активирует
его, причем световым маркером выделяется пункт с указанным <Номером>
(по умолчанию первый). Клавишами-стрелками "вверх", "вниз" маркер
можно перемещать с одного пункта на другой. Позицию меню в окне или
на экране (левый верхний угол области меню) задает опция AT (в ее
отсутствие позиция определяется описанием меню). Опция REST
используется, если пункты меню соответствуют записям БД и нужно,
чтобы в нем был выделен пункт для текущей записи. Выбор пункта и опция  
NOWAIT объяснены в команде ACTIVATE MENU.
     ACTIVATE SCREEN восстанавливает вывод на экран, которое как бы
становится текущим окном выдачи. Поскольку имевшиеся окна остаются на
дисплее, вывод может быть закрыт ими. Чтобы его посмотреть, надо 
нажать и придерживать клавиши Alt+Ctrl+Shift, осуществляющие временное
скрытие окон.
     ACTIVATE WINDOW <Список имен окон> | ALL  [NOSHOW]
[IN [WINDOW] <Имя окна> | IN SCREEN]  [BOTTOM | TOP | SAME] выводит на
дисплей указанные в <Cписке> ранее определенные окна (все определенные
окна, если задано ALL), причем последнее в списке (определенное
последним - в случае опции ALL) окно становится текущим окном выдачи
- на него направлен поток вывода. Предшествующее окно является
возможным преемником окна выдачи (при деактивации последнего). Однако,
записав новую команду ACTIVATE WINDOW, можно сделать окном выдачи
любое окно, в том числе выведенное на дисплей предыдущей такой командой.
Опция NOSHOW позволяет сделать активное окно скрытым (невидимым),
которое тем не менее может быть окном выдачи. Возобновить показ окна
можно командой SHOW WINDOW. Вложения окон могут быть заданы при их
определении. Опция IN [WINDOW], указывающая "родительское" окно 
для активируемых окон, более приоритетна. Аналогично, опция IN SCREEN
("расположить на экране") может отменить ранее определенное вложение
активируемых окон. Опция BOTTOM (TOP) важна в случае перекрытия окон
и помещает активируемые окна в конец (начало) стека окон, в котором
могут быть окна, активированные ранее. Окном переднего плана (оно
не бывает перекрыто другим окном) является окно в начале (верхушке)
стека окон. Опция SAME восстанавливает прежнее положение в стеке
окон, которые были активированы и затем скрыты. 
     APPEND [BLANK]  добавляет пустую запись в конец активной БД
или вызывает окно Open File, с помощью которого можно выбрать и
сделать активной БД, и добавляет запись, причем в отсутствие
атрибута BLANK на экране появляется окно редактирования и можно
задать значения полей новой записи. Команда APPEND BLANK не
прерывает выполнения программы; заполнение полей новой записи
осуществляется программным путем либо окно редактирования будет
открыто последующей командой BROWSE, CHANGE или EDIT.
     APPEND FROM <ИмяФ> | ?  [FIELDS <Список полей>] [<FOR-условие>]
[TYPE <Тип файла>] добавляет в конец активной БД записи, заполняемые
данными из другого файла. Опция "?", открывающая окно Open File,
позволяет выбирать файл-источник из списка файлов, предъявляемого в
окне. Если источником данных является другая БД,
предполагается, что структуры этой и активной БД имеют пересечение.
Добавленные записи заполняются в той мере, каково пересечение. Если
структуры полностью различаются, команда без опций добавляет в 
активную БД пустые записи по числу записей в БД-источнике. Если в 
данных БД  n полей, одинаковых по названиям и типам, только эти поля 
и заполняются в добавляемых записях. Опцию FIELDS задают, если хотят 
ограничить объем передаваемых данных указанными в <Списке> полями 
(множество идентичных полей рассматриваемых БД может быть шире).
  <FOR-условие> позволяет сделать выборку необходимых данных
файла-источника. Пример: APPEND FROM Student FOR NOT Deleted().
Опцию TYPE <Тип файла>  задают, если источником не является БД. 
<Тип файла> имеет следующие варианты:
  DELIMITED обозначает текстовый файл, каждая строка которого содержит
данные одной записи, причем значения полей разделяются запятыми,
символьные значения заключены в кавычки: "ИВАНОВ И.И.";
  DELIMITED WITH BLANK  отличается от варианта "DELIMITED" тем, 
что значения полей разделены не запятыми, а пробелами; 
  DELIMITED WITH TAB в отличие от варианта "DELIMITED" использует 
символы табуляции для разделения значений полей;
  DELIMITED WITH <Разделитель>   в отличие от варианта "DELIMITED" 
использует символ <Разделитель> для разделения значений полей;
  SDF обозначает текстовый ASCII-файл, каждая строка которого содержит
данные одной записи, причем значения полей не разделяются. Поэтому
достаточно сдвига на 1 позицию, чтобы исказить все следующие значения
полей. Пример:  ИВАНОВ И.И.           1940МУЖОГМ . При наборе текста
важно не исказить размеры полей, набирая первую строку: следующие
строки можно набирать по этому образцу.
  Прочие варианты перечислим через запятую, указав в скобках 
расширения имен соответствующих файлов: DIF (.dif), FW2 (.fw2), 
MOD (.mod), PDOX (.db), RPD (.rpd), SYLK (нет расширения по умолчанию),
WK1 (.wk1), WK3 (.wk3), WKS (.wks), WR1 (.wr1), WRK (.wrk), XLS (.xls).
     APPEND FROM ARRAY <Мас> [<FOR-условие>] [FIELDS <Список полей>]
дополняет активную БД записями, каждая из которых заполняется 
значениями из соответствующей строки массива <Мас>: поля записи
получают значения по порядку их указания в <Списке полей> или, если
атрибут FIELDS со <Списком полей> опущен, по порядку их описания в
структуре БД. Поля, не указанные в <Списке полей>, остаются пустыми
в добавляемых записях.
    Если имеется <FOR-условие>, строка массива сначала проверяется
на соответствие этому условию, и в случае получения .T.("истина")
формируется очередная запись,т.е. производится отбор строк. Хотя
проверяются элементы строки массива, в <FOR-условии> должны фигурировать 
соответствующие им поля записи. Если в массиве больше столбцов, чем
полей в БД, лишние столбцы игнорируются.
   Если <Мас> одномерный массив, в БД добавляется единственная запись
(массив используется как строка двумерного массива). 
Предупреждение. Несоответствие типа элемента массива типу заполняемого
поля не рассматривается как ошибка, в БД оказывается "чужеродный" 
элемент или значение по умолчанию и ошибка может проявиться позднее,
поэтому будьте внимательны, а также предусматривайте контроль.
    APPEND MEMO <Имя Memo-поля> FROM <ИмяФ> [OVERWRITE]
дополняет содержание указанного Memo-поля текстом файла <ИмяФ> или,
если указана опция OVERWRITE, полностью обновляет Memo-поле, занося 
в него указанный текст. <ИмяФ> должно указываться с расширением,
если оно имеется. 
    BROWSE [LAST] [TITLE <ВырC >] [FIELDS <Список полей>] [NOWAIT]
[WIDTH <ВырN >] [<FOR-условие>] [REST]  [KEY<ВырN > [,<ВырN >]] 
[NOAPPEND] [NOEDIT | NOMODIFY] [FREEZE <Имя поля>] [NODELETE]
[FORMAT]  [WHEN <ВырL >]   [VALID [F:] <ВырL > [ERROR <ВырC >]]
[LOCK <ВырN >] [NORGRID] [NOLGRID] [PARTITION <ВырN >] [LPARTITION]
[NOLINK] [LEDIT] [REDIT] [NOREFRESH] [NOOPTIMIZE] [NOCLEAR] [NOMENU]
[NORMAL] [WINDOW <Имя окна >] [IN [WINDOW] <Имя окна > | IN SCREEN] ]
[COLOR SCHEME <ВырN > | COLOR <Список цветовых пар>]
[TIMEOUT <ВырN >] [SAVE] [PREFERENCE <ВырC >]
открывает окно редактирования и выводит на дисплей записи базы данных,
создавая состояние ожидания, необходимое для их редактирования, если
опция NOWAIT не задана. При опции NOWAIT программа продолжает работу,
пока состояние ожидания не будет создано другой командой, например
READ, и можно будет заняться редактированием. В изображаемой на
дисплее BROWSE-таблице записи представлены строками, поля - столбцами.
В таблицу выводятся поля, указанные в <Списке полей> (по умолчанию
- все поля БД). Все столбцы таблицы могут не уместиться на дисплее,
и тогда используется скроллинг.
    Элемент <Списка полей> - это <Имя поля><Набор ключей>
(рассмотрены на с. 311). В нем можно указывать и выражения (так
называемые вычисляемые поля). Параметр WIDTH <ВырN > позволяет
ограничить ширину ячейки таблицы значением <ВырN >. В этом случае
для просмотра значений большей, чем <ВырN > длины, используется
скроллинг в пределах ячейки таблицы. Чтобы не подвергать случайным
изменениям поля, можно указать единственное редактируемое поле в
опции FREEZE. Изменение прочих полей будет блокировано. Опция
NOEDIT (или NOMODIFY) запрещает прямое редактирование таблицы
(возможно ее изменение через функции пользователя, подключаемые к
BROWSE). Если редактирования нет, имеет смысл отменить регулярно
производимое обновление таблицы, указав опцию NOREFRESH.
    Нажатие клавиш Ctrl+N добавляет запись в конец таблицы. В нее
копируются поля текущей записи, если действует установка SET CARRY 
ON (можно задать выборочное копирование, указав необходимые поля:
SET CARRY TO <Список полей>). Опция NOAPPEND отменяет использование
клавиш Ctrl+N для добавления записей. Опция NODELETE отменяет
использование клавиш Ctrl+T для пометки текущей записи на удаление.
    Выделение подмножества записей, отображаемых таблицей,
производят с помощью FOR-условия или опции KEY. Совместно с
FOR-условием используется опция REST, предотвращающая повторную
фильтрацию записей с самого начала БД при новом вызове BROWSE-
таблицы, когда курсор надо оставить в прежней строке. Опция KEY
обеспечивает быструю выдачу на дисплей записей с ключами в
диапазоне от <Выр > до <Выр > (соответствующий индекс должен
быть ведущим). 
    Опция WHEN <ВырL > управляет доступом к записи: если <ВырL >=.F.,
запись недоступна для редактирования. Опция VALID <ВырL > выполняет
"завершающий" контроль записи: если некоторые условия не выполнены
и <ВырL >=.F., попытка вывести курсор из строки вызывает сообщение
<ВырC > об ошибке или системное сообщение Invalid Input (в
отсутствие <ВырС >, а курсор остается в строке. Контролируются 
измененные записи, а чтобы контролировать все, надо записать ключ 
:F после слова VALID. 
    В момент выполнения BROWSE может иметься окно выдачи, тогда
таблица выводится в него. Опция WINDOW <Имя окна >, указывающая
ранее определенное окно, имеет больший приоритет: таблица
выводится в окне <Имя окна >, которое автоматически активируется.
При этом окно BROWSE "наследует" все его свойства, например,
перемещаемость, возможность изменения размеров. Опция NORMAL
также отменяет вывод таблицы в окно выдачи. При этом окно BROWSE
приобретает свойства системного.  Опция IN [WINDOW] <Имя окна >
помещает окно BROWSE в ранее определенное и обязательно видимое
"родительское" окно, свойства которого не имеют отношения к
свойствам окна BROWSE. Последнее как бы в ловушке: изменение его
размеров ограничено и положение на экране будет меняться с
перемещением "родительского".
    С помощью опции TIMEOUT <ВырN > задают число секунд ожидания
ввода. Если в течение этого времени ввода не было, окно BROWSE
автоматически закрывается. Опция NOCLEAR обеспечивает сохранение
на дисплее образа окна BROWSE (заключительное состояние) после 
его закрытия. Опция NOMENU препятствует порождению подменю BROWSE
системного меню, одновременно подавляется действие клавиш Ctrl+N,
Ctrl+T (см. выше). Опция NOOPTIMIZE отменяет оптимизацию доступа
к записям. Опция SAVE сохраняет окно BROWSE после выхода из
команды BROWSE и к нему можно возвращаться после работы в
других окнах. 
    При закрытии окна BROWSE опции команды и все изменения
конфигурации окна запоминаются в файле FOXUSER.DBF. Последующее
обращение к таблице с помощью команды BROWSE LAST (в данной или
другой программе) происходит в соответствии с этой информацией,
т.е. опция LAST заменяет множество ранее назначенных опций.
Опция PREFERENCE <ВырC > позволяет для каждой BROWSE-таблицы
запоминать эту информацию отдельно - под именем <ВырC >, причем
можно зафиксировать для таблицы базовый вариант (защитить от
перезаписи).  
    Опции LOCK, NOLGRID, NORGRID, PARTITION, LPARTITION, NOLINK,
LEDIT, REDIT, имеющие отношение к делению таблицы на 2
автономные части, рассмотрены в п. 18.6.
     CANCEL прекращает выполнение программы FOXPRO. Если ее выполнение
происходило в среде FOXPRO, управление передается окну команд, а если
в системе Runtime - происходит возврат в DOS.
     CHANGE <Границы> <WHILE-условие> <Опции>  открывает окно
редактирования и выводит на дисплей записи базы данных, создавая
состояние ожидания ввода, необходимое для их редактирования, если
не задана опция NOWAIT. <Опции>{DOWN}, включая NOWAIT, это рассмотренные
выше опции команды BROWSE, кроме опций  NOLGRID, NORGRID, не
применяемых в CHANGE. В окне CHANGE все поля БД располагаются по
одной вертикали и в окне видно столько записей и полей, сколько их
удается разместить. В остальном использование команды подобно
использованию BROWSE (см. выше).
     CLEAR стирает экран или текущее окно выдачи и очищает текущий
GET-список. В файлах формата также допускается использовать CLEAR.
     CLEAR ALL уничтожает массивы и переменные, кроме системных,
все определенные пользователем меню и окна, закрывает все БД и
связанные с ними индексы, форматные и Memo-файлы и выбирает
рабочую область 1.
    CLEAR FIELDS  во всех рабочих областях удаляет список полей,
созданный командой SET FIELDS TO, и автоматически выполняет
SET FIELDS OFF.
    CLEAR GETS  очищает текущий GET-список.
    CLEAR MACROS уничтожает закрепление за функциональными клавишами
макропоследовательностей (макросов), в том числе, назначенных
пользователем. Предварительно макросы можно сохранить командой
SAVE MACROS, а когда нужно - восстановить командой RESTORE MACROS.
    CLEAR MEMORY уничтожает все массивы и переменные (не системные).
    CLEAR MENUS уничтожает все BAR-меню, удаляя их и с дисплея.
    CLEAR POPUPS уничтожает все POPUP-меню, удаляя их и с дисплея.
    CLEAR PROGRAM очищает буфер скомпилированной программы.
    CLEAR PROMPT уничтожает приглашения всех пунктов меню,
созданных командами @ ... PROMPT.
    CLEAR READ [ALL] завершает выполнение команды READ текущего
уровня с переходом на предшествующий, если не задана опция ALL,
означающая завершение действующих READ всех уровней.
    CLEAR TYPEAHEAD очищает буфер клавиатуры от кодов нажатых
клавиш. Применяя ее, можно исключать влияния случайно нажатых
клавиш перед нажатием клавиш по приглашению, выводимому на экран.
    CLEAR WINDOWS уничтожает определенные пользователем окна,
освобождая память и удаляя их также с дисплея.
    CLOSE ALL закрывает файлы всех типов и выбирает рабочую
область 1.
    CLOSE ALTERNATE закрывает во всех рабочих областях
ALTERNATE-файлы.
    CLOSE DATABASES закрывает все БД вместе с индексами и
файлами формата и выбирает рабочую область 1.
    CLOSE FORMAT закрывает файл формата в текущей рабочей
области.
    CLOSE INDEX  закрывает .IDX- и .CDX-файлы в текущей рабочей
области. Структурный индекс не закрывается.
    CLOSE PROCEDURE закрывает процедурный файл.
    CLOSE MEMO <Список имен Memo-полей> | ALL  закрывает окна
редактирования всех (опция ALL) или указанных в списке Memo-полей
любых открытых БД (если БД неактивна, имя Memo-поля уточняется
алиасом).
    COMPILE <ИмяФ> | <Шаблон имен> [ENCRYPT]  [NODEBUG]
компилирует исходный программный файл <ИмяФ> или группу файлов,
имена которых отвечают <Шаблону имен>, создавая объектный файл
(файлы). Опция ENCRYPT обеспечивает шмфрование откомпилированных
программ для закрытия доступа к исходным текстам. Опция NODEBUG
обеспечивает сокращение каждой команды откомпилированного файла
на 2 байта, занятых ссылкой на строку исходного текста.
С.77  CONTINUE  используется после команды LOCATE для поиска в активной
БД очередной (начиная со второй) записи, удовлетворяющей FOR-условию, 
записанному в LOCATE. Если запись найдена, Recno() представляет ее
номер, Found() = .T., EOF() = .F..
С.88  COPY FILE <ИмяФ > TO <ИмяФ > копирует файл <ИмяФ > (не должен
быть открытым!) в <ИмяФ >. Имена <ИмяФ >, <ИмяФ > надо записывать с
расширениями (если есть). .FPT-файл копируют отдельной командой COPY 
FILE, если БД с Memo-полями (отличие от команды COPY TO).
С.285 COPY INDEXES <Список .IDX-файлов> | ALL  [TO <Имя .CDX-файла>]
для активной БД создает в заданном .CDX-файле (по умолчанию - в 
структурном .CDX-файле) теги - копии указанных в <Списке> открытых 
.IDX-файлов (всех открытых .IDX-файлов, если вместо <Списка> записано
ALL). Если .CDX-файл не существовал, он создается.
С.281 COPY MEMO <Memo-поле> TO <ИмяФ> [ADDITIVE]  записывает
содержимое Memo-поля текущей записи активной БД в текстовый файл
<ИмяФ> (по умолчанию к имени файла добавляется расширение .TXT)
или, если записана опция ADDITIVE, дополняет файл этим содержимым.
С.93  COPY STRUCTURE TO <ИмяБД> [FIELDS <Список полей>]
[[WITH] CDX | [WITH] PRODUCTION]  создает пустую (только заголовок)
БД <ИмяБД>, помещая в ее заголовок описания полей активной БД,
указанных в <Списке>. По умолчанию структура активной БД копируется
полностью. Последняя опция создает для новой БД копию структурного
индексного файла, например: COPY STRUCTURE TO RabDB CDX.
С.93  COPY STRUCTURE EXTENDED TO <ИмяФ> создает БД <ИмяФ>, каждая
запись которой описывает одно из полей активной БД. На основе БД
<ИмяФ>, обычно модифицируемой, команда CREATE FROM создает пустую БД,
имеющую структуру, описанную в файле <ИмяФ>.
С.285 COPY TAG <Имя тега> [OF <Имя .CDX-файла>] TO <Имя .IDX-файла>
для активной БД копирует тег структурного или иного открытого .CDX-
файла в .IDX-файл (создает автономный индекс). Опцию записывают,
если имя тега совпадает с именем тега в другом открытом .CDX-файле.
С.88  COPY TO <ИмяФ> [FIELDS <Список полей>] [<Границы>] [<Условия>]
[[WITH] CDX | [WITH] PRODUCTION] [NOOPTIMIZE] [TYPE <Тип файла>]
копирует в файл <ИмяФ> содержимое активной БД полностью (в отсутствие
опций из 1 строки) или частично: копируются указанные поля из всей
БД или заданного <Границами> и <Условиями> подмножества записей.
   Получение БД-копии. При наличии Memo-полей копируется и .FPT-файл. 
Указывая опцию CDX или WITH CDX, задают одновременное копирование 
структурного индекса (получает имя <ИмяФ>). Memo-файлы в FOXPRO и 
FOXBASE+ различаются. Получение копии БД с Memo-полями для FOXBASE+ 
требует указания FOXPLUS в качестве <Типа файла>.
   Получение копии в виде ASCII-файла (расширение имени по умолчанию
.TXT). Указывают SDF как <Тип файла>. Копией записи является отдельная 
строка, заканчивающаяся возвратом каретки и переводом строки, 
составленная из текстовых представлений полей записи, ничем не 
разграниченных. Чтобы получить подобный файл с разделением полей 
пробелом | знаком табуляции, указывают <Тип файла> как DELIMITED WITH 
BLANK|TAB. Если указать только слово DELIMITED, поля будут разделяться 
запятыми, а символьные поля - еще и заключаться в кавычки. Вместо
кавычек будет использоваться иной <Ограничитель>, если указать
DELIMITED WITH <Ограничитель>.
   Экспорт данных. В качестве <Типа файла> может быть указано одно
из обозначений DIF, MOD, SYLK, WK1, WKS, WR1, WRK, XLS, соответствующие,
кроме SYLK, расширениям файлов, используемых в других системах.
С.272 COPY TO ARRAY<Мас> [FIELDS<Список полей>] [<Границы>] [<Условия>] 
[NOOPTIMIZE] копирует в предварительно описанный двумерный массив <Мас> 
содержимое активной БД полностью (в отсутствие опций из 1 строки) или 
частично: копируются лишь указанные поля из всей БД или из заданного 
<Границами> и <Условиями> подмножества записей. Каждая строка массива
заполняется значениями полей одной записи в порядке указания полей в
<Списке> (в отсутствие <Списка> - по порядку описания полей в 
структуре БД). Memo-поля данная команда игнорирует. При копировании
единственного поля используется двумерный массив с одним столбцом,
а одномерный массив может заменять только массив с одной строкой.
Если массив имеет больше столбцов, чем нужно, последние не заполняются.
Если столбцов меньше, чем нужно, последние поля записи не копируются.
С.83  COUNT [<Границы>] [<Условия>] [TO <Имя>] [NOOPTIMIZE] подсчитывает
число записей в подмножестве записей активной БД, заданном <Границами>
и <Условиями> (во всей БД, если эти опции опущены). Это число выводится
на дисплей (если действует установка SET TALK ON), в системное окно
(если была выполнена команда SET TALK WINDOW), а при наличии опции
TO <Имя> - присваивается переменной <Имя>.
С.57  CREATE [<ИмяБД> | ?] в интерактивном режиме выполняет построение
новой БД <ИмяБД> путем определения имени, типа и размера каждого поля
(см. с.56). В полученной БД присутствует лишь заголовок. Наполнить БД 
в интерактивном режиме можно с помощью команды BROWSE или EDIT. Если
<Имя БД> не задано или взамен записан "?", будет выдано окно диалога
для задания имени БД.
     CREATE COLOR SET <Имя>  из текущих цветовых установок создает 
запоминаемый в файле ресурсов FOXPRO цветовой набор <Имя>.
С.93 CREATE [<ИмяБД>] FROM [<ИмяФ>]  создает пустую БД (только 
заголовок) по описанию <ИмяФ> ее структуры (см. команду COPY STRUCTURE 
EXTENDED). Если хотя бы одно из имен <ИмяБД>,<ИмяФ> опущено, выдается
окно Open File для их задания.
     CREATE LABEL [<ИмяФ> | ?] [[WINDOW <Окно >] [IN [WINDOW] <Окно >|
IN SCREEN]] открывает окно построения этикеток и активирует утилиту
генерации этикеток. При выходе из окна определение этикетки можно
сохранить в .LBX-файле <ИмяФ> (если <ИмяФ> не задано или вместо него
записан "?", будет выдано окно диалога для указания имени). Если
предварительно определено <Окно > (не обязательно активное и видимое),
окно этикетки примет все его характеристики, а если определено и
указано "родительское" <Окно >, то будет открыто в нем. <Окно > могло
быть определено как часть другого окна; указывая IN SCREEN, можно
вывести его вне - на экране. Если <Окно >,<Окно > не заданы, окно
этикетки строится на экране.
С.371 CREATE MENU [<ИмяФ> | ?] [[WINDOW <Окно >] [IN [WINDOW] <Окно >|
IN SCREEN]] открывает окно построения меню и активирует Построитель
меню. При выходе из окна можно сохранить в .MNX-файле <ИмяФ> определение
меню. Опции команды - такие же, как в CREATE LABEL, и обьяснены выше.
С.376 CREATE PROJECT [<ИмяФ>| ?] [[WINDOW <Окно >] [IN [WINDOW] <Окно >|
IN SCREEN]] открывает окно Проекта для указания составляющих 
законченного приложения в базе данных с именем <ИмяФ> и расширением
имени .PJX, одновременно создается Memo-файл <ИмяФ>.PJT. Опции команды
- такие же, как в CREATE LABEL, и обьяснены выше.
С.369 CREATE QUERY [<ИмяФ> | ?] открывает окно RQBE для построения
команды SELECT (SQL) в интерактивном режиме; результат записывается
как программа в файл <ИмяФ> с расширением имени .QPR. На выполнение ее 
запускают с помощью команды вида  DO <ИмяФ>.QPR . Если <ИмяФ> опущено 
или заменено "?", задать файлу имя можно при выходе из окна.
С.355 CREATE REPORT [<ИмяФ>| ?] [[WINDOW <Окно >] [IN [WINDOW] <Окно >|     
IN SCREEN]] открывает окно построения отчета в интерактивном режиме и 
активирует утилиту генерации отчета. Построенная форма отчета
записывается в файл <ИмяФ> с расширением .FRX, который указывается
в команде REPORT FORMAT, осуществляющей вывод отчета. Опции команды -
такие же, как в CREATE LABEL, и пояснены выше.
С.362 CREATE SCREEN [<ИмяФ> | ?] [[WINDOW <Окно >] [IN [WINDOW] <Окно >|
IN SCREEN]] открывает окно построения экрана в интерактивном режиме и
активирует Генератор экранов. Построенный образ экрана запоминается в
в файле <ИмяФ>.SCX , а состояние среды (открытые БД и индексы) - в
файле <ИмяФ>.SCT . Программу <ИмяФ>.SPR, использующую эти файлы для
вывода полученного экрана, можно создать с помощью пункта Program/
Generate системного меню. Опции команды - такие же, как в CREATE LABEL, 
и пояснены выше.
С.300 CREATE TABLE | DBF <ИмяБД> ( <Список описаний полей> ), в которой
<Описание поля> имеет вид  <Имя поля> <Тип> [(<Размер поля> [,<Число
разрядов дроби>] )], создает пустую БД (только заголовок) с описанной
структурой, причем <Размер поля> не задают для полей типа D, L и M,
а <Число разрядов дроби> задают лишь для типа N.
С.300 CREATE TABLE | DBF <ИмяБД> FROM ARRAY <Мас> создает пустую БД
по двумерному массиву <Мас> описания ее структуры, который подобен
массиву - результату функции Afields().
      CREATE VIEW <ИмяФ>  создает файл <ИмяФ>.VUE  представления c
описанием текущего состояния среды FOXPRO: а) все открытые БД, индексы, 
файлы формата и ALTERNATE- файлы; б) все поля из списка SET FIELDS;
в) все действующие отношения БД; г) фильтры всех открытых БД;
д) действующий процедурный файл; е) установки DEFAULT и PATH;
ж) текущий HELP-файл и файл ресурсов; з) статус SET SKIP.
Для воссоздания среды используют команду SET VIEW TO <ИмяФ>.
      DEACTIVATE MENU деактивирует и удаляет с экрана активное 
BAR-меню.
С.323 DEACTIVATE POPUP деактивирует и удаляет с экрвна активное
POPUP-меню.
С.304 DEACTIVATE WINDOW  <Список окон> | ALL  деактивирует и удаляет
с экрана все (если есть ALL) или указанные в <Списке> окна. Если при
этом деактивировано текущее окно выдачи, новым окном выдачи станет
активированное последним из оставшихся на экране окон, а если их нет
- экран.
С.32  DECLARE <Список описаний массивов>,  в которой <Описание массива>
имеет вид <Мас> (<ВырN > [, <ВырN >] ), создает одномерные и двумерные
(<ВырN > - число строк, <ВырN > - число столбцов) массивы.  Вместо
круглых скобок в <Описании массива> можно использовать квадратные.
С.324 DEFINE BAR <Номер> | <Пункт системного меню> OF <Имя POPUP-меню>
PROMPT <ВырC >  [BEFORE <ВырN > | AFTER <ВырN >]  [MARK <ВырC >]
[MESSAGE <ВырC >]  [SKIP [FOR <ВырL>]] [KEY <Имя клавиши> [,<ВырC >] 
[COLOR <Список цветовых пар> | COLOR SCHEME <ВырN >]  определяет пункт 
<Номер> вертикального меню <Имя POPUP-меню>, как содержащий текст 
приглашения <ВырC >. Если задано <ВырC >, то будучи выбранным, данный 
пункт получит метку <ВырC >. Опцию MESSAGE <ВырC > используют, если 
при выборе пункта необходимо сообщение (оно будет выдано в строку, 
назначенную командой SET MESSAGE TO). Опция SKIP ставится в описание 
пункта, который выбираться не должен (например, заголовок раздела меню). 
Если выбор пункта зависим от условий, записывают SKIP FOR <ВырL>, где 
<ВырL> - условие пропуска пункта (выбор возможен, если <ВырL> = .T.).
Блокированные пункты изображаются приглушенным цветом. Опция KEY
позволяет задать клавишу (комбинацию клавиш) для прямого выбора
пункта, ее обозначение выводится справа от приглашения пункта. Можно
заменить его текстом <ВырC >, например CTRL+F8 - текстом "^F8".
Опцию BEFORE (AFTER) разрешается указывать в описании пунктов меню,
определенного со словом RELATIVE. Она означает вставку данного пункта
в меню перед (BEFORE) или после (AFTER) указанного в опции пункта.
    Для включения в POPUP-меню подпункта системного меню вместо
<Номера> указывают имя подпункта (имена подпунктов системного меню
возвращает функция SYS(2013)).
С.326 DEFINE MENU <Имя BAR-меню> [BAR [AT LINE <ВырN >]]
[IN [WINDOW] <Окно> | IN SCREEN] [KEY <Имя клавиши>] [MARK <ВырC >]
[MESSAGE <ВырC >]  [NOMARGIN]  [COLOR <Список цветовых пар> | 
 COLOR SCHEME <ВырN >]  определяет так называемое горизонтальное
(BAR-) меню, причем включение опции BAR создает линейку меню, 
действующую подобно линейке системного меню и занимающую на экране 
строку <ВырN > (по умолчанию 1-ю). Можно указать <Окно> для вывода
меню (по умолчанию выводится в текущее окно выдачи, а если активных
окон нет - на экран; опцию IN SCREEN используют, если при наличии 
окна выдачи выводят меню на экран). Если дать опцию KEY, линейка меню 
будет активироваться нажатием клавиши (комбинации клавиш), например:
KEY CTRL+U. Опция MARK задает символ <ВырC > - метку выбранного
пункта меню (не имеет силы для пунктов, в описании которых указана
собственная метка). По умолчанию слева и справа от пункта меню
выводятся пробелы; их можно удалить, указав NOMARGIN. Опция
MESSAGE аналогична опции в команде  DEFINE BAR (см. выше).
С.327 DEFINE PAD <Имя пункта> OF <Имя BAR-меню> PROMPT <ВырC >
[AT <Y>,<X>] [BEFORE <Имя пункта > | AFTER <Имя пункта >] 
[KEY <Имя клавиши> [,<ВырC >]] [SKIP [FOR <ВырL>]] [MESSAGE <ВырC >]
[MARK <ВырC >] [COLOR <Список цветовых пар> | COLOR SCHEME <ВырN>]
определяет пункт <Имя пункта> в заданном BAR-меню, как содержащий
приглашение <ВырC >. В отсутствие опции BAR в определении меню
<Имя BAR-меню> можно указывать опцию AT с координатами <Y>,<X> в
определении пунктов, размещая их произвольно. По умолчанию пункты
образуют линейку в 0-й строке от ее начала. Прочие опции подобны
используемым в командах DEFINE BAR и DEFINE MENU.
С.322  DEFINE POPUP <Имя меню> [FROM <Y>,<X>] [TO <YY>,<XX>]
[TITLE <ВырC >] [FOOTER <ВырC >] [PROMPT FILES [LIKE <Шаблон имен>]]
[PROMPT STRUCTURE]  [PROMPT FIELD <Выр>]  [KEY <Имя клавиши>]
[IN [WINDOW] <Окно> | IN SCREEN]  [MARGIN]  [MESSAGE <ВырC >]
[MARK <ВырC >]  [MOVER]  [MULTI]  [RELATIVE]  [SCROLL]  [SHADOW]
[COLOR <Список цветовых пар> | COLOR SCHEME <ВырN>]  определяет
вертикальное меню <Имя меню>, верхний левый угол которого получает
координаты <Y>,<X> в заданном <Окне> (по умолчанию - в текущем окне
выдачи или на экране, если активных окон нет). Значениями <Y>, <X>
по умолчанию являются 0, 0. В отсутствие <XX>, <YY> правый нижний
угол меню размещается автоматически. <ВырC > и <ВырC > представляют
заголовок и надпись в "подвале" меню, соответственно. Опция PROMPT
FILES определяет приглашения пунктов как имена файлов текущей или
иной директории (в <Шаблоне имен> можно ее указать), PROMPT 
STRUCTURE определяет приглашения пунктов как имена полей активной
БД, а PROMPT FIELD <Выр> - как значения <Выр>, содержащего имена
полей БД (при необходимости уточненные алиасом) или одно имя поля.  
MARGIN обеспечивает пробелы слева (для метки выбора) и справа от 
приглашения (для полосы прокрутки, назначаемой опцией SCROLL).
RELATIVE обеспечивает возможность вставки пункта меню среди уже
описанных (см. DEFINE BAR). Опция MOVER позволяет изменять
взаимный порядок пунктов, SHADOW задает "тень" справа и снизу от
меню. Опция MULTI, используемая в отсутствие PROMPT, обеспечивает 
множественный выбор пунктов (выбранные пункты будут помечены).
Прочие опции аналогичны опциям в DEFINE MENU (см. выше).
С.303 DEFINE WINDOW <Имя окна> FROM <Y>,<X> TO <YY>,<XX> [FILL<ВырC >] 
[IN [WINDOW] <Окно> | IN SCREEN]  [FOOTER <ВырC >] [TITLE <ВырC >]
[DOUBLE | PANEL | NONE | SYSTEM | <ВырC >]  [CLOSE | NOCLOSE]
[FLOAT | NOFLOAT]  [GROW | NOGROW]  [MINIMIZE]  [ZOOM | NOZOOM]
[SHADOW]  [COLOR <Список цветовых пар> | COLOR SCHEME <ВырN>]
определяет окно <Имя окна> пользователя с возможными атрибутами FLOAT
(перемещаемое), GROW (с изменяемым размером), MINIMIZE (приводимое
к минимальному размеру - один заголовок), ZOOM (с изменением размера
"скачком"), CLOSE (закрываемое из системного меню, с помощью мыши
и клавиш) или NOCLOUSE (закрываемое только в программе). Рамка окна
(по умолчанию одинарная) может быть двойной (DOUBLE), в виде
сплошной полосы (PANEL), системного типа (SYSTEM; на рамке -
символы управления), построенной из символов <ВырC > (см. п. 9.7)
или вообще отсутствовать (NONE). Положение окна на экране или в
другом окне (опция IN <Окно>) задается координатами <Y>,<X> (<YY>,<XX>)
левого верхнего (правого нижнего) угла. Возможен заголовок <ВырC > в
верхней строке (на рамке, если она есть) и текст <ВырC > внизу окна.
Может быть задан символ <ВырC > для заполнения окна ("задний план").
С.67  DELETE [<Границы>] [<Условия>] [NOO           PTIMIZE]  помечает как
удаляемую текущую запись (в отсутствие опций) или множество записей,
заданное <Границами> и <Условиями>.
С.32  DIMENSION <Список описаний массивов> определяет массивы подобно
команде DECLARE (см. выше).
      DIR [[ON] <Диск>] [[LIKE] [<Путь>] [<Шаблон имен>]] [TO PRINTER |
TO FILE <ИмяФ>] выводит на дисплей и на принтер (если есть TO PRINTER)
или в файл <ИмяФ> (если есть TO FILE <ИмяФ>) оглавление директории на
диске <Диск> или диске по умолчанию, выделяя подмножество файлов,
если задан <Шаблон имен>. Директорию можно указать <Путем> к ней.
Пример: DIR  D:TIM\V*.PRG (выводятся имена программ, начинающиеся с V).
С.76  DISPLAY [OFF] [FIELDS <Список полей>] [<Границы>] [<Условия>] 
[NOCONSOLE] [NOOPTIMIZE] [TO PRINTER | TO FILE <ИмяФ>]  выводит на 
дисплей (если нет опции NOCONSOLE) и на принтер (если есть TO PRINTER)
или в файл <ИмяФ> указанные в <Списке> поля (по умолчанию - все поля)
заданного <Границами> и <Условиями> множества записей (по умолчанию
выводится одна текущая запись). Опция OFF подавляет вывод номеров
записей.
      DISPLAY FILES   [ON <Диск> | <Директория>] [<Шаблон имен>]
[TO PRINTER | TO FILE <ИмяФ>] подобно команде DIR выводит информацию
о файлах.
С.43  DISPLAY MEMORY  [LIKE <Шаблон имен>] [TO PRINTER] [TO FILE<ИмяФ>]
[NOCONSOLE]  выводит на дисплей (если нет опции NOCONSOLE) и на
принтер (если есть TO PRINTER) или в файл <ИмяФ>   имя, тип, значение
и класс всех действующих в текущий момент переменных и массивов.
      DISPLAY STATUS [TO PRINTER | TO FILE <ИмяФ>]  [NOCONSOLE]
отображает статус среды FOXPRO. Опции - те же, что в DISPLAY MEMORY.
      DISPLAY STRUCTURE [IN <Обл>] [TO PRINTER | TO FILE<ИмяФ>]
[NOCONSOLE]  отображает структуру БД, открытой в области <Обл> (по
умолчанию - активной БД). Прочие опции - те же, что в DISPLAY MEMORY.
С.40,267 DO <Имя> [WITH <Список параметров>]  [IN <ИмяФ>]  выполняет
программу <Имя> или процедуру <Имя>, передавая ей параметры из
<Списка> (если они есть). Переменные и массивы передаются по ссылке.
Для передачи по значению такой параметр надо заключать в скобки. 
В качестве <Имени> используется имя программного файла, если программа 
(процедура) не имеет заголовка. В этом случае программа (процедура) 
должна быть первой в файле. При обращении к иным процедурам из другого 
файла <ИмяФ> необходима опция IN <ИмяФ>, если только <ИмяФ> не 
является действующим процедурным файлом. Если <Имя> не содержит 
расширения, сначала разыскивается .EXE-файл, затем .APP-файл, потом 
.FXP-файл и в последнюю очередь .PRG-файл. Указывая расширение имени, 
DO применяют для запуска .MPR- (программа меню), .SPR- (программа 
экрана) и .QPR-файла (программа запроса SELECT-таблицы).
С.36  DO CASE  начинает структуру переключателя:
 DO CASE
    CASE <ВырL >         
   <Команды, выполняемые в случае <ВырL > = .T.>
    CASE <ВырL >
   <Команды, выполняемые, если <ВырL > =.T., а предыдущие <ВырL>=.F.>   
    CASE <ВырL >
      .  .  .
   [OTHERWISE
   <Команды, выполняемые только в случае ложности всех <ВырL > > ]
 ENDCASE                                        && Конец структуры
С.37  DO WHILE <ВырL>  начинает структуру цикла с предусловием:
    DO WHILE <Условие входа в цикл и дальнейшего его повторения>
     <Команды тела цикла, среди которых может быть LOOP, которая
      пропускает оставшиеся команды тела цикла (без выхода из него)
      и команда EXIT, осуществляющая переход к команде, идущей
      после ENDDO >
    ENDDO                                       && Конец структуры
С.311 EDIT  имеет тот же состав опций, как в CHANGE (см. выше) и то 
же назначение.
С.50  EJECT  устанавливает начало следующей страницы на принтере
(функции Prow() и Pcol() получают значение 0). 
С.87  ERASE <ИмяФ> | ?   удаляет файл <ИмяФ> из текущей директории
или с диска и из директории, указанных в составе <ИмяФ>. Если <ИмяФ>
не задано или указан "?", команда открывает окно Optn File  для
выбора удаляемого файла. Если имя файла имеет расширение, его
обязательно включают в <ИмяФ>.
      EXIT  производит выход из циклов DO WHILE, FOR и SCAN.
      EXPORT TO  [FIELDS <Список полей>]  [<Границы>]  [<Условия>]
[NOOPTIMIZE] [TYPE] DIF | MOD | SYLK | WK1 | WKS | WR1 | WRK | XLS
копирует записи активной БД в файл с другим форматом, используемый
вне FOXPRO ("экспорт данных"), дублируя команду COPY TO в данном плане.
      EXTERNAL  ARRAY | LABEL | LIBRARY | MENU | PROCEDURE | REPORT 
| SCREEN  <Мас> | <ИмяФ>  указывает диспечеру проектов необходимость
включения в проект массива <Мас> (вариант EXTERNAL ARRAY <Мас>) или
файла <ИмяФ>, тип которого обозначен словом, идущим после EXTERNAL.
Например, EXTERNAL REPORT XXX предписывает включить в проект форму
(файлы XXX.FRX и XXX.FPT) отчета. В программе не применяется.
      FILER [LIKE <Шаблон имен>] [NOWAIT] [IN [WINDOW] <Окно> |
IN SCREEN]  открывает окно Filer в <Окне> (по умолчанию в текущем
окне выдачи или на экране, если активных окон нет) для интерактивной
работы с файлами (см. с. 260, подменю SYSTEM), имена которых 
соответствуют шаблону имен (по умолчанию выдается оглавление текущей 
директории). Если команда выполняется в программе, выполнение 
приостанавливается вплоть до закрытия окна Filer. Опция NOWAIT 
отменяет приостановку. В этом случае работа в окне Filer начнется в 
момент, когда программа будет ожидать ввод (например, при достижении 
команды READ).
      FIND <Аргумент поиска>  в активной БД, ведущий индекс которой
имеет символьный ключ K, перемещает указатель на запись, в которой 
ключ K точно совпадает с <Аргументом поиска>. <Аргумент поиска>
записывается как набор литер, не заключенный в кавычки. Поэтому,
если в его роли выступает переменная, перед ней записывают знак
"&". Если искомая запись найдена, Recno() принимает значение ее
номера, Found() = .T.. Если ее нет и действует SET NEAR ON,
Recno() указывает запись с ближайшим следующим значением ключа 
(Found() = .F.), а если действует SET NEAR OFF, указатель размещается 
на конце файла БД (EOF() =.T., Found() = .F.).
      FLUSH переносит изменения в БД из рабочей области на диск,
закрепляя также изменения в содержании индексов.
С.38  FOR <Имя> = <ВырN > TO <ВырN > [STEP <ВырN >] начинает цикл FOR:
  FOR <Параметр цикла> = <Начальное значение> TO <Конечное значение> ...
  <Команды тела цикла, выполняемые для каждого значения параметра
   цикла, среди которых может быть LOOP, которая пропускает 
   оставшиеся команды тела цикла (без выхода из цикла) и EXIT, 
   выполняющая переход к команде, следующей за ENDFOR>
  ENDFOR                                      && Граница тела цикла
  Ввиду неточности вещественных, нельзя рассчитывать на совпадение
вещественной переменной <Имя> с границей <ВырN >.
С.20  FUNCTION <Имя функции>  определяет начало функции пользователя
и может быть опущена только при размещении текста функции от начала
файла. В последнем случае в качестве имени функции используют имя файла.
С.271 GATHER FROM <Мас> | MEMVAR   [FIELDS <Список полей>]  [MEMO]
пересылает в текущую запись активной БД, в поля, указанные <Списком
полей> (по умолчанию используются поля БД в последовательности 
описания структуры БД) значения элементов массива <Мас> или, если
указана опция MEMVAR, значения переменных. Последние должны иметь те
же имена, что и поля БД. Memo-поля пропускаются в отсутствие опции 
MEMO. При несовпадении числа элементов и полей БД лишние игнорируются. 
Обычно используется совместно со SCATTER (см. ниже).
     GETEXPR [<ВырC >] TO <Имя> [TYPE <ВырC > [; <ВырC >]] [DEFAULT
<ВырC >]  активирует построитель выражений (см. с. 357), открывая 
соответствующее окно, для построения выражения и запоминания его в 
переменной <Имя> в виде строки символов. Необязательное <ВырC > 
является сообщением-напоминанием, которое выводит Построитель. Можно 
символом <ВырC > указать тип выражения, например "N", и задать 
сообщение <ВырC >, которое будет выводиться в случае ошибочного типа. 
Опцию DEFAULT предусматривают для определения значения переменной 
<Имя> при отказе от построения выражения.
С.57  GO [TO]  <Номер> | TOP | BOTTOM   [IN <Обл>]   в открытой БД,
заданной аргументом <Обл> (по умолчанию в активной БД), устанавливает
указатель на запись с указанным <Номером>, на первую (TOP) или
последнюю (BOTTOM) запись. Команды GO 1  и  GO TOP  эквивалентны
только в отсутствие ведущего индекса и фильтра, ибо когда они есть,
слово "первая" надо понимать как "первая в индексной последовательности"
или "первая среди отфильтрованных". Аналогично изменяется смысл слова 
"последняя".
      HELP [IN [WINDOW] <Окно> | IN SCREEN]  [<Тема>]  [NOWAIT]
открывает окно помощи (подсказки) в "родительском" <Окне> (по
умолчанию в текущем окне выдачи или на экране, если активных окон нет).
Указание <Темы>, например HELP GO, ведет к выдаче необходимого раздела
помощи. Указание начальной части также ускоряет поиск подсказки.
Например, команда HELP SET выводит в начало обширного раздела помощи,
где рассматриваются SET-установки. Опция NOWAIT уместна, если помощь
вызывается из программы. NOWAIT отменяет приостановку программы после
вывода окна помощи.
С.326 HIDE MENU <Список имен BAR-меню> | ALL  [SAVE]  удаляет с экрана
или из окна указанные BAR-меню (все BAR-меню, если задано ALL). Вновь
вызвать меню на дисплей можно командой SHOW MENU или ACTIVATE MENU.
Опция SAVE оставляет на дисплее образ меню (не действующего).
      HIDE POPUP <Список имен POPUP-меню> | ALL [SAVE]  аналогична
HIDE MENU, но действует с вертикальными (POPUP-)меню.
С.306 HIDE WINDOW [<Список окон> | ALL] [IN [WINDOW] <Окно>| IN SCREEN]
[SAVE] удаляет с экрана или из <Окна> указанные в <Списке> окна (все
окна, если указано ALL; по умолчанию - одно лишь текущее окно выдачи).
Подобное скрытие окна оставляет его активным. Например, выдача идет в
окно, но невидима. Вновь сделать окно видимым можно командой SHOW
WINDOW или ACTIVATE WINDOW.
С.36  IF  <ВырL>   начинает структуру ветвления:
   IF <ВырL> - логическое выражение, используемое для выбора ветви>
      <Ветвь 1 - команды, используемые в случае <ВырL> = .T.>
   [ELSE
      <Ветвь 2 - команды, используемые в случае <ВырL> = .F.>
   ENDIF                                && Конец структуры ветвления
      IMPORT FROM <ИмяФ> [TYPE] FW2 | MOD | PDOX | RPD | SYLK | WK1
| WK3 | WKS | WR1 | WRK | XLS   создает новую БД <ИмяФ>, импортируя
в нее данные из файла <ИмяФ> иного формата (он указывается после TYPE), 
чем используемые FOXPRO. По своему действию противоположна команде EXPORT.
С.284 INDEX ON <Выр>  TO <ИмяФ> | TAG <Имя тега> [OF <Имя .CDX-файла>]
[<FOR-условие>] [COMPACT] [ASCENDING | DESCENDING] [UNIQUE] [ADDITIVE]
по заданному индексному выражению <Выр> создает автономный индексный
файл <ИмяФ> или тег <Имя тега> в составе мультииндексного файла <Имя
.CDX-файла> (по умолчанию - тег в структурном .CDX-файле). Если задано
FOR-условие, создается индекс-фильтр. В индекс включается только одна
из записей с одинаковым значением ключа, если указана опция UNIQUE.
Опцию COMPACT указывают при создании компактного (экономящего память)
.IDX-файла. Теги всегда компактны. Опция DESCENDING задает убывающую
последовательность значений ключа в индексе. К моменту выполнения
команды в БД уже могли быть открыты индексы. Они закрываются, если
только не указать в команде опцию ADDITIVE.
С.32  INPUT [<ВырC>] TO <Имя> создает состояние ожидания для ввода 
выражения, значение которого присваивается переменной <Имя> в
момент нажатия Enter. Символьные значения набираются в кавычках. В
остальном подобна команде ACCEPT. <ВырC> - приглашение к вводу.
С.289 INSERT [BEFORE] [BLANK]  вставляет в активную БД новую запись
сразу после текущей записи или, если дана опция BEFORE, перед ней.
Опция BLANK указывает на вставку пустой записи. В отсутствие BLANK
в новую запись переносится (может быть, частично) содержание текущей,
если действуют установки SET CARRY ON, SET CARRY TO.
С.301 INSERT INTO <ИмяБД> [(<Список полей>)] VALUES (<Список выр.>)
добавляет новую запись в конец БД <ИмяБД> и присваивает полям,
указанным в <Списке>,(по умолчанию - всем полям по порядку их описания)
значения выражений из <Списка>. Если БД не была открыта,она открывается.
С.301 INSERT INTO <ИмяБД> FROM ARRAY <Мас>  добавляет новую запись
в конец БД <ИмяБД>, перенося в нее значения элементов массива <Мас>.
С.91  JOIN WITH <Обл> TO <ИмяБД> <FOR-условие> [FIELDS <Список полей>]
[NOOPTIMIZE]  выполняет операцию соединения (см. с. 11) над активной
БД и базой данных, указанной аргументом <Обл>, записывая результат в
новую БД <ИмяБД>. Команда рассматривает каждую пару {запись активной БД,
запись <ИмяБД>} и если FOR-условие, в котором должны использоваться
поля каждой из БД, дает "истину", из пары формируется запись новой БД.
В нее поступают поля, указанные в <Списке> (по умолчанию - все поля 2
записей текущей пары). Поля БД <ИмяБД> должны уточняться алиасом.
Вместо команды JOIN рекомендуется использовать команду SELECT (SQL).
С.33  KEYBOARD <ВырC> [PLAIN]  заносит символы <ВырC> в буфер
клавиатуры, из которого они востребуются при очередном вводе данных.
В <ВырC> возможны имена клавиш; имя клавиши заключается в скобки, а
затем в кавычки, например: KEYBOARD "(CTRL+UP)" (см. с. 332).
С.76  LIST [OFF] [FIELDS <Список полей>]  [<Границы>]  [<Условия>]
[NOCONSOLE]  [NOOPTIMIZE]  [TO PRINTER | TO FILE <ИмяФ>] как и
команда DISPLAY выводит записи активной БД (по умолчанию - все).
См. объяснение опций для команды DISPLAY. Если действует установка
SET DELETED ON, записи, помеченные на удаление, не показываются.
      LIST FILES,  LIST MEMORY,  LIST STATUS, LIST STRUCTURE
подобны командам DISPLAY FILES, DISPLAY MEMORY  и т.д. (см. выше).
С.77  LOCATE <FOR-условие> [<Границы>] [<WHILE-условие>] [NOOPTIMIZE]
в активной БД устанавливает указатель на первую запись из заданного
<Границами> и <WHILE-условием> множества записей, для которой
FOR-условие дает значение .T.. При этом Recno() равно ее номеру, а 
Found() = .T.. Номер записи отобразится на экране. Если запись не
найдена, указатель записи устанавливается на конец файла, Found()=.F.,
EOF()=.T..  Поиск следующих таких записей можно выполнять с помощью
CONTINUE.
С.321 MENU BAR <Мас>, <Кол-во>  определяет линейку FOX-меню как
состоящую из <Кол-во> пунктов, представленных элементами 1 столбца
символьного массива <Мас>. Во 2-й столбец помещают комментарии к
пунктам. Если j-й пункт не требует комментария, j-й элемент 2-го
столбца должен быть пустой строкой. Комментарии будут выводиться в
строку, указанную командой SET MESSAGE TO (по умолчанию - в 24-ю).
С.321 MENU <Номер>, <Мас>, <Кол-во> [,<ВырN>] определяет
вертикальное подменю в двухуровневом FOX-меню, соответствующее
пункту<Номер> линейки, описанной в MENU BAR (см. выше). 
Символьный массив <Мас> содержит <Кол-во> пунктов (приглашений)
подменю. <ВырN> задает число одновременно отображаемых пунктов.
Его указывают, если <Кол-во> пунктов не умещается на экране;
используется прокрутка.
     MODIFY COMMAND <ИмяФ|Шаблон имен> | MODIFY FILE [<ИмяФ|Шаблон имен>]
     [NOEDIT]  [NOWAIT]  [SAVE]  [RANGE <Номер >, <Номер >]
[[WINDOW <Окно >]  [IN [WINDOW] <Окно > | IN SCREEN]]  открывает окно
текстового редактора для программного или иного текстового файла.
Опция NOEDIT запрещает редактирование (только просмотр), NOWAIT
отменяет приостановку программы после открытия окна. Опция RANGE
обеспечивает выдачу в окно участка текста, начиная с символа <Номер >
вплоть до символа <Номер >. Если <Номер >=<Номер >, выделения участка
нет, а курсор устанавливается в позицию <Номер >. Окно редактирования
получит все свойства <Окна >, если оно определено и указано, и будет
открыто в "родительском" <Окне > (по умолчанию - в текущем окне выдачи
или на экране, если активных окон нет). SAVE сохраняет образ окна после
закрытия.
С.281 MODIFY MEMO <Список Memo-полей> [NOEDIT] [RANGE <Номер >,<Номер >]
[NOWAIT]  [SAVE]  [[WINDOW <Окно >] [IN [WINDOW] <Окно > | IN SCREEN]]
открывает окна или одно <Окно> (если задана опция WINDOW) для просмотра
или редактирования Memo-полей текущей записи активной БД (в <Списке
Memo-полей> можно указывать Memo-поля и других открытых БД, уточняя
их алиасами). При использовании общего <Окна> доступ к Memo-полям
возможен по очереди. Чтобы перейти к следующему полю, нажимают Ctrl+F1.
Опции команды подобны опциям MODIFY COMMAND (см. выше).
     MODIFY MENU  подобна CREATE MENU (см. выше) и позволяет 
модифицировать и создавать новые меню.
     MODIFY PROJECT подобна CREATE PROJECT (см. выше) и позволяет
модифицировать и создавать проекты.
     MODIFY QUERY подобна CREATE QUERY (см. выше) и позволяет 
модифицировать и создавать новые запросы (SELECT-таблицы).
     MODIFY REPORT подобна CREATE REPORT (см. выше) и позволяет
модифицировать и создавать новые формы отчета.
     MODIFY SCREEN подобна CREATE SCREEN (см. выше) и позволяет
модифицировать и создавать новые файлы описания экранов.
     MODIFY STRUCTURE открывает диалог для модификации структуры БД,
открытой в текущей рабочей области (если в ней не открыта БД, возникает
приглашение к выбору БД для модификации). Могут быть добавлены новые
и удалены поля, изменены имена, типы и размеры полей.
С.326 MOVE POPUP <Имя POPUP-меню> TO <Y>,<X> | BY <ВырN >, <ВырN >
перемещает POPUP-меню в новую позицию, заданную новыми координатами
<Y>,<X> левого верхнего угла области меню или смещением на <ВырN >
строк, <ВырN > столбцов. Если <ВырN > < 0 (<ВырN > < 0) смещение
происходит на <ВырN > строк вверх (на <ВырN > столбцов влево),
иначе на <ВырN > строк вниз (на <ВырN > столбцов вправо).
С.308 MOVE WINDOW <Имя окна> TO <Y>,<X> | BY <ВырN >, <ВырN >
перемещает окно <Имя окна> в новую позицию (см. выше объяснение
параметров команды MOVE POPUP).
С.327 ON BAR <Номер> OF <POPUP-меню> [ACTIVATE <Имя POPUP-меню> |
ACTIVATE MENU <Имя BAR-меню>  задает активацию подменю <Имя POPUP-меню>
или <Имя BAR-меню> при выборе пункта <Номер> заданного <POPUP-меню>.
Для отсоединения подменю выполняют ту же команду без опции.
С.384 ON ERROR [<Команда>] назначает перехват прерывания при 
возникновении ошибки и выполнение <Команды>. Команда без опции
отменяет сделанное ранее назначение.
С.331 ON ESCAPE [<Команда>] назначает выполнение <Команды> в случае
прерывания, вызванного нажатием клавиши Esc, если действует установка
SET ESCAPE ON.
С.331 ON KEY [<Команда>] назначает выполнение <Команды> при нажатии
клавиши, после чего прерванная программа продолжает работу.
С.332 ON KEY [LABEL <Имя клавиши>]  [<Команда>]  назначает выполнение
<Команды> по нажатии клавиши (комбинации клавиш), обозначенной 
<Именем клавиши>. Для отмены назначения выполняют команду без 
последней опции.
С.327 ON PAD <Имя пункта> OF <BAR-меню> [ACTIVATE <Имя POPUP-меню> | 
ACTIVATE <Имя BAR-меню>]  задает активацию подменю <Имя POPUP-меню>
или <Имя BAR-меню> при выборе пункта <Имя пункта> в линейке заданного
<BAR-меню>.
     ON PAGE [AT LINE <Номер> <Команда>]  назначает выполнение
<Команды> при достижении в процессе выдачи отчета строки с заданным
<Номером>. Команда в виде ON PAGE отменяет предыдущее назначение.
С.324 ON SELECTION BAR <Номер> OF <POPUP-меню> [<Команда>] назначает
выполнение <Команды> при выборе пункта <Номер> указанного <POPUP-меню>.
Команда без опции отменяет сделанное ранее назначение.
С.386 ON READERROR [<Команда>]  назначает перехват прерывания при
возникновении ошибки ввода и выполнение <Команды>. Команда без опции
отменяет сделанное ранее назначение.
С.327 ON SELECTION MENU <BAR-меню> | ALL  [<Команда>]  назначает
выполнение <Команды> при выборе любого пункта линейки указанного
BAR-меню (при выборе пункта в любом активном BAR-меню, если записано
ALL). Команда без опции отменяет сделанное ранее назначение.
С.327 ON SELECTION PAD <Имя пункта> OF <BAR-меню>  [<Команда>]
назначает выполнение <Команды> при выборе пункта <Имя пункта> в
указанном <BAR-меню>. Команда без опции отменяет предыдущее назначение.
С.323 ON SELECTION POPUP <POPUP-меню> | ALL  [<Команда>]  назначает
выполнение <Команды> при выборе любого пункта заданного <POPUP-меню>
(при выборе пункта в любом активном POPUP-меню, если записано ALL).
Команда без опции отменяет сделанное ранее назначение.
С.67  PACK [MEMO] [DBF]  в активной БД физически удаляет записи,
помеченные на удаление. В виде PACK MEMO команда удаляет 
неиспользуемое пространство в Memo-файле ("чистка мусора"), не
удаляя из БД записи, помеченные на удаление. PACK DBF, напротив,
удаляя записи, не уплотняет Memo-файл.
С.20  PARAMETERS <Список параметров> определяет указанные в списке
переменные и массивы как параметры блока. Должна быть первой в блоке 
после его заголовка (первой, если нет заголовка блока).
С.333 POP KEY [ALL] восстанавливает отмененные (и сохраненные)
последними назначения клавиш, сделанные командами ON KEY LABEL.
Опция ALL предписывает уничтожение всех текущих назначений клавиш.
      POP MENU <BAR-меню>  восстанавливает уничтоженное ранее
BAR-меню, если перед этим оно было записано в стек.
      POP POPUP <POPUP-меню> восстанавливает уничтоженное ранее
POPUP-меню, если перед этим оно было записано в стек.
С.41  PRIVATE <Список переменных> определяет переменные как локальные
для текущего блока (действуют и в тех подблоках, где нет одноименных
переменных или массивов).
С.39  PROCEDURE <Имя процедуры>  определяет начало процедуры и может
быть опущена только при размещении процедуры от начала файла. В
последнем случае в качестве имени процедуры используется имя файла.
С.41  PUBLIC <Список переменных и/или описаний массивов> определяет
переменные и массивы как глобальные (общие), т.е. доступные не
только в каждом блоке программы, но и в любой программе, выполняемой
в данном сеансе работы на ЭВМ. Переменные и массивы, созданные в
окне команд, автоматически становятся глобальными. В программе
переменная не должна получать значения до объявления ее глобальной.
С.332 PUSH KEY [CLEAR] помещает в стек (запоминает) текущие назначения
клавиш. Эти назначения отменяются, если указана опция CLEAR.
      PUSH MENU <Имя BAR-меню> помещает указанное меню в стек меню
(запоминает).
      PUSH POPUP <Имя POPUP-меню> помещает указанное меню в стек меню
(запоминает).
      QUIT  возвращает управление DOS, заканчивая сеанс работы с FOXPRO.
С.345 READ  [CYCLE]  [ACTIVATE <ВырL >]  [DEACTIVATE <ВырL >]  [MODAL]
[WITH <Список окон>] [SHOW <ВырL >] [VALID <ВырL >|<ВырN >] [WHEN<ВырL >]  
[OBJECT <ВырN >]  [TIMEOUT <ВырN >]  [SAVE]  [LOCK | NOLOCK] [NOMOUSE]
[COLOR <Список цветовых пар> | COLOR SHEME <ВырN >]  создает режим
ожидания ввода и активирует объекты, созданные командами @ ... GET
и @ ... EDIT. Опция CYCLE препятствует выходу из команды, когда
обработан последний (первый) объект и клавишей задано перемещение к
объекту с несуществующим большим (меньшим) номером: выбирается первый
(последний) объект. <ВырL > используется в начале работы READ и
изменении текущего окна (объекты могут размещаться в нескольких
окнах). Обычно <ВырL > - это обращение к функции пользователя,
которая блокирует GET-объекты в других окнах, скрывает окна и т.д.
При попытке перехода к объекту другого окна проверяется <ВырL >.
Обычно это функция пользователя, проверяющая корректность содержания
полей "покидаемого" окна. Если <ВырL > =.F., работа READ продолжится,
иначе происходит выход из READ. Опция MODAL блокирует активацию окон,
кроме окон с объектами данного READ. Опция WITH задает <Список окон>
для доступа; по умолчанию доступны все интерактивные окна (BROWSE и 
т.п.) и окна команд MODIFY. Те из них, которые нужны, указывают в
опции. Выражение <ВырL > (обычно обращение к функции пользователя)
действует всякий раз, когда в каком-либо блоке выполняется SHOW GETS.
Например, блокируются или разблокируются объекты. <ВырL > = .T.
(<ВырL > = .T.) разрешает начать (завершить) работу READ. <ВырN >
задает номер объекта, обозначаемого курсором после входа в READ.
С помощью <ВырN > можно задать время работы READ (в секундах).
Если порядок выбора объектов важен, можно опцией NOMOUSE запретить
выбор мышью. Опция SAVE запрещает уничтожение списка GET-объектов:
его может использовать следующая команда READ.
С.319 READ MENU TO <Имя> [SAVE]  активирует вертикальное FOX-меню.
Исходное значение переменной <Имя> указывает пункт меню, выделенный
маркером вначале. После выполнения выбора она получает значение
номера выбранного пункта. SAVE сохраняет образ меню после выбора.
С.67  RECALL [<Границы>]  [<Условия>]  [NOOPTIMIZE]  в активной БД
снимает метку удаляемой записи во всех помеченных записях множества,
заданного <Границами> и <Условиями> (по умолчанию команда действует
на одну текущую запись).
С.62  REINDEX [COMPACT]  обновляет все индексные файлы, открытые в
текущей рабочей области. Одновременно .IDX-файлы можно сделать
компактными, записав COMPACT.
С.42  RELEASE <Список имен> удаляет переменные и массивы, имена
которых указаны в <Списке>.
С.42  RELEASE ALL  [LIKE <Шаблон имен> | EXCEPT <Шаблон имен>]
удаляет только те переменные и массивы, имена которых соответствуют
(LIKE) <Шаблону имен> или, напротив, ему не соответствуют (EXCEPT).
      RELEASE MENUS [<Список имен BAR-меню> [EXTENDED]]   уничтожает
указанные в списке BAR-меню (по умолчанию - все BAR-меню), причем
уничтожаются и подключенные к ним подменю, если указано EXTENDED. 
Перед уничтожением меню должно быть деактивировано (DEACTIVATE MENU).
      RELEASE PAD  <Имя пункта> | ALL    OF <BAR-меню>  удаляет
пункт <Имя пункта> (все пункты, если записано ALL) указанного BAR-меню.
С.326 RELEASE POPUPS [<Список имен POPUP-меню> [EXTENDED]] уничтожает
указанные в списке POPUP-меню (по умолчанию - все POPUP-меню), причем
уничтожаются и подключенные к ним подменю, если указано EXTENDED.
Перед уничтожением активное меню надо деактивировать (DEACTIVATE POPUP).
С.326 RELEASE BAR  <Номер> | ALL   OF <POPUP-меню>  удаляет пункт
<Номер> (все пункты, если записано ALL) указанного POPUP-меню.
С.304 RELEASE WINDOWS [<Список окон>]  уничтожает окна, указанные в
<Списке> (по умолчанию удаляется одно текущее окно выдачи).
С.87  RENAME <ИмяФ > TO <ИмяФ >  заменяет имя <ИмяФ > файла новым
именем <ИмяФ >. Оба имени должны быть с расширениями, если они есть.
С.76  REPLACE <Список замещений> [<Границы>] [<Условия>] [NOOPTIMIZE]
в активной БД, в заданном <Границами> и <Условиями> множестве записей 
(по умолчанию в одной текущей записи), замещает значения полей,
указываемых в <Списке замещений>, новыми значениями. Элемент списка
замещений имеет вид  <Поле БД> WITH <Выр> [ADDITIVE], где <Выр> -
источник нового значения <Поля БД>, ADDITIVE используется только с
Memo-полем, указывая, что прежнее его содержание дополняется текстом
<Выр>.
С.361  REPORT [FORM <ИмяФ >| ?] [<Границы>] [<Условия>] [ENVIRONMENT]
[HEADING <ВырC>] [NOEJECT] [NOCONSOLE] [NOOPTIMIZE] [PDSETUP] [PLAIN]
[PREVIEW] [SUMMARY] [TO PRINTER | TO FILE <ИмяФ >]  использует форму
отчета <ИмяФ> для выдачи отчета на дисплей (в отсутствие NOCONSOLE),
а также на принтер (если есть опция TO PRINTER) или в файл <ИмяФ >.
Если указана опция ENVIRONMENT, используется среда, в которой
создавалась форма отчета, иначе до команды REPORT нужно открыть все
необходимые БД и индексы, установить, если требуется, связи БД.
<Границы> и <Условия> позволяют задать подмножество записей активной
БД, иначе отчет будет создан на основе всех записей. В начало каждой
страницы отчета можно поместить дополнительную строку <ВырC>.
Опция NOEJECT подавляет подачу страницы перед выводом на принтер.
PDSETUP загружает установки принтера, заданные при создании формы.
PLAIN отменяет выдачу заголовка в каждой странице (в начале отчета
остается). Опция PREVIEW блокирует выдачу отчета на принтер и в
файл (пробная выдача на дисплей). Опция SUMMARY обеспечивает выдачу
в отчет лишь итогов и подытогов (если они есть). Если <ИмяФ > не
задано, будет открыто окно Open File для выбора формы отчета.
С.42  RESTORE FROM   <ИмяФ> | MEMO <Memo-поле>  [ADDITIVE]
уничтожая (в отсутствие ADDITIVE) существующие переменные и массивы, 
восстанавливает переменные и массивы, сохраненные в файле <ИмяФ> или 
в <Memo-поле> текущей записи активной БД.
С.51  RESTORE SCREEN [FROM <Имя>]  восстанавливает предварительно
сохраненный экран или окно из символьной переменной <Имя> или из
символьного элемента <Имя> массива (по умолчанию - из экранного
буфера).
С.305 RESTORE WINDOW <Список окон> | ALL  FROM  <ИмяФ>|<Memo-поле>
восстанавливает в памяти предварительно сохраненные описания окон из 
файла <ИмяФ> или <Memo-поля> текущей записи активной БД. Если указана
опция ALL восстанавливаются все сохраненные описания окон.
      RESUME  возобновляет работу приостановленной программы.
С.267 RETRY при завершении работы блока возвращает управление той
команде, которая его вызвала, с целью повторного обращения к блоку.
С.20  RETURN [<Выр> | TO MASTER | TO <Имя блока>]  возвращает
управление от блока к вызвавшему его блоку, если не указана опция
TO MASTER (возврат к главному блоку) или TO <Имя блока> (возврат к
указанному блоку). <Выр> определяет значение, возвращаемое блоком-
функцией (по умолчанию .T.).
С.51  SAVE SCREEN [TO <Имя>] сохраняет образ экрана или текущего
окна выдачи в переменной <Имя> или элементе <Имя> массива (по
умолчанию как запоминающий элемент используется экранный буфер).
С.42  SAVE TO  <ИмяФ>| MEMO <Memo-поле>  [ALL LIKE <Шаблон имен> |
ALL EXCEPT <Шаблон имен>] сохраняет в файле <ИмяФ> (расширение
имени по умолчанию - .MEM) или в <Memo-поле> текущей записи
активной БД всех переменных и массивов, имена которых соответствуют
(ALL LIKE) <Шаблону имен>, либо ему не соответствуют (ALL EXCEPT).
По умолчанию сохраняются все действующие переменные и массивы.
С.304 SAVE WINDOW <Список окон>|ALL   TO <ИмяФ>|TO MEMO<Memo-поле>
сохраняет в файле <ИмяФ> или в <Memo-поле> текущей записи активной
БД определения и статус окон, указанных в <Списке окон> (если
указана опция ALL, сохраняются все окна).
С.85  SCAN [<Границы>]  [<Условия>]  [NOOPTIMIZE]  начинает цикл 
обработки заданного <Границами> и <Условиями> подмножества записей
активной БД с автоматическим продвижением по БД и завершением:
  SCAN  <Опции>
   <Команды обработки очередной записи; среди них может быть LOOP,
    которая пропускает оставшиеся до границы цикла команды, и 
    EXIT, выполняющая переход к команде, следующей за ENDSCAN>
  ENDSCAN                                   && Граница цикла
С.271 SCATTER [FIELDS <Список полей>] [MEMO]  MEMVAR | TO <Мас>
[BLANK]  копирует данные из текущей записи активной БД в массив
<Мас> или, если указана опция MEMVAR, в одноименные с полями БД
переменные. Массив нужного размера или переменные создаются 
автоматически, если не существовали. Копируются поля, указанные в
списке (по умолчанию - все поля БД). Если есть опция MEMO, Memo-
поля также копируются, иначе игнорируются. Опция BLANK подавляет
передачу данных: создаются переменные или элементы массива с
пустыми значениями соответствующей длины и типа.
      SCROLL <Y>,<X>, <YY>,<XX>, <Кол-во > [,<Кол-во >]
выполняет прокрутку области экрана, заданной координатами <Y>,<X>
(<YY>,<XX>) левого верхнего (правого нижнего) угла, на <Кол-во >
строк по вертикали или на <Кол-во > столбцов по горизонтали.
Для сдвига вниз (вверх) задают <Кол-во > меньше (больше) 0.
Для сдвига влево (вправо) задают <Кол-во > меньше (больше) 0.
Если <Кол-во > = 0, область очищается.
С.77  SEEK <Выр>  в активной БД устанавливает указатель на запись,
для которой ключ ведущего индекса равен <Выр>, при этом значение 
Recno() равно ее номеру, Found() =.T.. Если такой записи нет и 
действует установка SET NEAR ON, Recno() указывает запись с ближайшим
следующим значением ключа (Found()=.F.), а если действует SET NEAR
OFF, указатель записи устанавливается на конец файла (EOF() =.T.,
Found() = .F.). Соответствие <Выр> и ключа должно быть точным,
исключая случай символьного <Выр> при действии SET EXACT OFF.
С.59  SELECT <ВырN> | <ВырC>  назначает рабочую область <ВырN>
(<ВырC>) в качестве текущей, где <ВырC> - алиас БД, если ранее
в области была открыта БД. SELECT 0  выбирает неиспользуемую
область с наименьшим номером.
С.293 SELECT [DISTINCT] <Список колонок> FROM <Список БД>
[INTO <Приемник> | TO PRINTER | TO FILE <ИмяФ> [ADDITIVE]] [PLAIN]
[WHERE <Конъюнкция условий связи БД> AND <Условие фильтрации>]
[NOCONSOLE] [NOWAIT] [GROUP BY<Список имен колонок и/или полей БД>]
[HAVING <ВырL>] [ORDER BY <Список колонок и/или полей БД>] 
[UNION [ALL] <Команда SELECT>]     формирует таблицу,
используя указанные в <Списке колонок> поля БД, заданных <Списком
БД>, устанавливая связи БД и фильтр (опция WHERE). Таблица может 
быть упорядочена (опция ORDER BY) и в ней возможно группирование 
записей (опция GROUP BY). В сложных запросах используются
подчиненные команды SELECT.
      SET  активирует окно View для интерактивной работы  с БД.
С.46  SET ALTERNATE TO [<ИмяФ>]  назначает ASCII-файл <ИмяФ> для
занесения в него информации, выдаваемой на экран командами "?","??"
и поступающей со ввода, или закрывает этот файл - в отсутствие аргумента.
С.46  SET ALTERNATE on | OFF  включает (ON) и выключает (OFF) режим
передачи экранной информации в ASCII-файл (см. SET ALTERNATE TO).
      SET ANSI on | OFF задает способ сравнения в SQL (см. гл.17)
2 символьных строк операцией "=" (на операцию "==" не воздействует).
В режиме ON строки приводятся к одной длине (если одна строка короче,
она дополняется хвостовыми пробелами), а затем сравниваются по всей
длине. Пример: "TOMMY" = "TOM" дает "ложь". В режиме OFF дополнение не
производится, а сравнивается начало длинной строки с короткой. В том
же примере будет получена "истина".
      SET AUTOSAVE on | OFF  устанавливает (ON) режим выгрузки буферов
ввода/вывода для БД по каждой команде READ и обращению к окну команд.      
      SET BELL ON | off  разрешает (ON) или запрещает (OFF) 
автоматическую подачу звукового сигнала.
С.31  SET BELL TO [<Частота>,<Длительность>] назначает характеристики
звукового сигнала или восстанавливает характеристики по умолчанию.
С.188 SET BLINK ON | off  устанавливает режим мерцания (ON) или
повышенной яркости (OFF) элементов изображения на экране (только для EGA,VGA).
С.282 SET BLOCKSIZE TO <ВырN> определяет размер блока для Memo-полей.
      SET BORDER TO [SINGLE | DOUBLE | PANEL | NONE | <Строка >
[,<Строка >]]  определяет вид прямоугольных рамок, в частности, для
меню и окон (см. с.307). <Строка > (<Строка >) представляет список
из 8 символов, используемых в изображении рамки, причем <Строка >
применяется только для рамок неактивных окон.
С.310 SET CARRY on | OFF  включает (ON) или выключает (OFF) режим
переноса в добавляемые записи содержимого текущей записи.
С.310 SET CARRY TO [<Список полей>] [ADDITIVE]  назначает выборочный
перенос полей (только из указанных в <Списке>) текущей записи в
добавляемые. ADDITIVE присоединяет <Список> к списку предыдущей
команды.      
С.23  SET CENTURY on | OFF  устанавливает формат выводимой даты с  
цифрами века (ON) или без них (OFF).
      SET CLEAR ON | off устанавливает (ON) режим очистки экрана
при выполнении команд SET FORMAT TO  и  QUIT.
      SET CLOCK on | OFF  устанавливает (ON) режим вывода на экран
текущего времени или отменяет (OFF) этот режим.
      SET CLOCK TO [<Y>,<X>] определяет позицию вывода текущего времени.
С.275 SET COLOR OF SCHEME <Номер > TO [<Список цветовых пар> |
SCHEME <Номер >]  задает цвета для цветовой схемы <Номер >, явно или 
копируя их из схемы <Номер >.
С.274 SET COLOR TO <Строка цвета>  определяет цвета вывода на экран.
      SET COMPATIBLE on | OFF  устанавливает режим программной
совместимости с FoxBASE+ (ON или FOXPLUS) или отменяет (OFF) его.
С.152 SET CONFIRM on | OFF   определяет, требуется ли подтверждение
(нажатие Enter) ввода значения GET-переменной: ON - требуется, OFF - нет.
С.46  SET CONSOLE ON | off  включает (ON) или подавляет вывод на дисплей.
      SET CURRENCY TO <ВырC> указывает символ для обозначения денежных
сумм.
      SET CURRENCY LEFT | right  указывает позицию денежного символа
относительно суммы: слева (LEFT) или справа (RIGHT).            
      SET CURSOR ON | off включает (ON) или выключает изображение курсора
С.22  SET DATE [TO] <Ключ>   задает формат даты для ввода и вывода.
      SET DEBUG ON | off  блокирует (OFF) и разблокирует (ON) доступ
к окнам отладки - DEBUG и TRACE.      
С.    SET DECIMALS TO <Кол-во> задает количество выводимых знаков 
дробной части в значениях функций и результатах вычислений.
      SET DEFAULT TO <Путь>  назначает диск и директорию (<Путь>), 
используемые по умолчанию.
С.67  SET DELETED on | OFF  включает (ON) и выключает (OFF) режим 
фильтрации помеченных на удаление записей.
      SET DELIMITERS  определяет разделители для GET.
      SET DEVELOPMENT ON | off  устанавливает режим (ON) проверки даты
и времени создания программных файлов с целью использования 
последних версий программ.      
С.50  SET DEVICE  TO SCREEN | TO PRINTER | TO FILE <ИмяФ>  задает 
устройство вывода результатов команд @ ... SAY  на экран (SCREEN), 
принтер (PRINTER) или в файл <ИмяФ>.
      SET DISPLAY TO  CGA| COLOR | EGA25 | EGA43 | MONO | VGA25 | VGA50
назначает режим изображения на дисплее.      
      SET ECHO on | OFF  в процессе выполнения программы открывает 
отладочное окно TRACE.      
С.23  SET EPOCH TO <Год>  управляет выводом цифр века в датах: даты
оказываются в пределах столетия, отсчитываемого от <Года>.
      SET ESCAPE ON | off  блокирует (OFF) использование клавиши Esc
для прерывания программы или разрешает (ON) такое использование.      
С.24  SET EXACT on | OFF назначает (ON) режим сравнения строк по
всей их длине (короткая строка дополняется пробелами).
С.389 SET EXCLUSIVE ON | off задает монопольное (ON) или совместное
использование баз данных.
      SET FIELDS on | OFF  назначает (ON) режим ограничения доступа
к полям БД или снимает (OFF) ограничение.      
      SET FIELDS [<Список полей БД> | ALL] указывает поля БД, к
которым разрешен доступ.      
С.74  SET FILTER TO [<ВырL>]  cкрывает записи, не удовлетворяющие
условию <ВырL> (ставит фильтр); в отсутствие аргумента выключает фильтр.
      SET FIXED ON | off  включает (выключает) фиксацию количества
разрядов дробной части.
      SET FORMAT TO [<Имя>]  активирует процедуру или файл формата
с указанным именем для выполнения команды READ.
      SET FULLPATH ON | off  включает (ON) режим возврата функциями
DBF() и NDX() полного имени файла, иначе (OFF) возвращается только
обозначение дисковода и имя файла.      
С.263 SET FUNCTION <Номер>| <ВырC> | <Имя клавиши> TO <Выр> 
приписывает строку <Выр> функциональной клавише с указанным <Номером> 
или <Именем>: нажатие клавиши будет вызывать выполнение макроса,
представленного строкой <Выр>, например: SET FUNCTION ALT+V "DO Rt; T".
      SET HEADING ON | off включает (ON) или подавляет (OFF) режим
вывода заголовков колонок при выполнении команд AVERAGE, CALCULATE, 
DISPLAY, LIST, SUM.
      SET HELP ON | off  отключает (OFF) и вновь подключает (ON)
диалоговую помощь (систему подсказки).
      SET HELP TO <ИмяФ>  назначает файл <ИмяФ> диалоговой помощи.
      SET HOURS TO [12 | 24] назначает 12- или 24-часовой цикл
при выдаче системного времени.      
С.284 SET INDEX TO [<Список индексов> | ?  [ORDER <ВырN>| <Имя 
.IDX-файла> | TAG <Имя тега> [OF <Имя .CDX-файла>] [ASCENDING |
 DESCENDING]] [ADDITIVE]]  для активной БД открывает указанные в 
<Cписке> индексы с назначением (если есть опция ORDER) ведущего 
индекса или тега, закрывая ранее открытые индексы, если только не 
задана опция ADDITIVE. Опция DESCENDING позволяет использовать 
ключи индекса в убывающем порядке. 
      SET LIBRARY TO [<ИмяФ> [ADDITIVE]]  подключает внешнюю
библиотеку подпрограмм на C или Ассемблере (отключает в отсутствие      
аргумента).
С.392 SET LOCK on | OFF  назначает (ON) режим автоматического 
блокирования файла для команд с чтением файла, препятствующий
изменению его записей другими пользователями (доступ по чтению им
не запрещен).
      SET LOGERROR ON | off  включает (ON) режим автоматической
записи диагностики компилятора в файл с расширением .ERR (имя файла
совпадает с именем компилируемой программы).      
С.50  SET MARGIN TO <ВырN>  для вывода на принтер устанавливает
размер <ВырN> отступа от левого края листа в числе знакомест.
      SET MARK OF MENU <Имя BAR-меню> TO <ВырC> | <ВырL> назначает
символ <ВырC> для пометки любого выбранного пункта <BAR-меню> или 
условие <ВырL> его применения: <ВырL>=.T. разрешает применение.
      SET MARK OF PAD <Имя пункта> OF <BAR-меню> TO <ВырC> | <ВырL>
для указанного именем пункта <BAR-меню> назначает символ пометки 
или условие его применения (см.выше).
      SET MARK OF POPUP <Имя POPUP-меню> TO <ВырC> | <ВырL> назначает
символ <ВырC> для пометки любого выбранного пункта заданного <POPUP-
меню> или условие его применения (см. SET MARK OF MENU).
      SET MARK OF BAR <Номер> OF <POPUP-меню> TO <ВырC> | <ВырL> для
указанного <Номером> пункта заданного <POPUP-меню> назначает символ
<ВырC> пометки или условие его применения (см. SET MARK OF MENU).      
С.51  SET MESSAGE TO [<Номер> [CENTER]] задает <Номер> строки выдачи
сообщения или подавляет вывод сообщения - в отсутствие аргумента.
      SET MOUSE ON | off подключает (ON) или отключает (OFF) мышь.
      SET MOUSE TO [<ВырN>] регулирует чувствительность манипулятора
мыши к перемещению: <ВырN> имеет значения от 1 (минимальная чувствительность) до 10 (максимальная чувствительность).
С.394 SET MULTILOCK on | OFF  включает (ON) или выключает (OFF)
режим группового блокирования записей при работе FOXPRO в сети.
С.79  SET NEAR on | OFF  назначает режим "жесткого" (ON) или
"мягкого" (OFF) поиска.
      SET OPTIMIZE ON | off включает (ON) и выключает (OFF) режим
оптимизации доступа к записям.            
С.285 SET ORDER TO [<Номер> | <.IDX-файл> | TAG <Имя тега> OF <Имя
.CDX-файла>]  индекс,указывая
его <Номер> в списке индексов; если <Номер> не указан, отменяется
управление по индексу, хотя все индексы из списка остаются открытыми.
      SET PATH TO [<Cписок путей>] задает маршруты поиска файлов,
не найденных в текущей директории, или отменяет ранее назначенные 
маршруты - в отсутствие аргумента.
      SET POINT TO [<ВырC>] заменяет десятичную точку символом
<ВырC>, в отсутствие аргумената - "восстанавливает в правах" точку.       
С.46  SET PRINTER ON | off  разрешает (ON) или запрещает (OFF) 
выдачу на принтер консольной информации.
С.46  SET PRINTER TO [<ИмяФ>] назначает файл <ИмяФ> для вывода. 
С.40  SET PROCEDURE TO <ИмяФ>  подсоединяет при компиляции процедуры 
и функции, находящиеся в файле <ИмяФ>, к основному .PRG-файлу.
      SET REFRESH TO <ВырN>  устанавливает режим обновления
отображаемых на дисплее данных через каждые <ВырN> секунд с целью
учета изменений, производимых в БД другими пользователями сети.      
С.63  SET RELATION TO [<Выр > INTO <Алиас >][,<Выр > INTO <Алиас >
...] [ADDITIVE]  устанавливает связь активной (материнской) БД с
дочерними БД, указанными их алиасами; значение <Выр > используется
в неявной команде SEEK как ключ для нахождения в дочерней БД
записи, соответствующей текущей записи в материнской БД, с целью
совместной обработки; <Выр > может представлять также номер записи
дочерней БД (например, Recno()), обеспечивающий доступ к записи.
С.66  SET RELATION OFF INTO <Обл> отменяет связь между активной БД
и дочерней БД, указанной аргументом <Обл>.
С.396 SET REPROCESS   TO <ВырN> [SECONDS] | TO AUTOMATICS  назначает
время (<ВырN> секунд) для повторных попыток блокирования, если первая
из них неуспешна. Опция TO AUTOMATICS назначает повторения попыток
без ограничения времени.          
      SET RESOURSE TO [<ИмяФ>] назначает файл <ИмяФ> ресурсов
вместо используемого по умолчанию файла FOXUSER.DBF.
      SET RESOURSE ON | off  включает (ON) режим обновлений файла
ресурсов при изменениях среды пользователем.           
      SET SAFETY ON | Ooff  назначает (ON) выдачу предупреждающих
сообщений при перезаписи файлов.      
      SET SCOREBOARD on | OFF  разрешает (ON) или запрещает
выдачу сообщений в строке экрана с номером 0.
      SET SEPARATOR TO <ВырC> назначает разделитель <ВырC> групп 
разрядов в больших числах.      
С.65  SET SKIP TO [<Список алиасов БД>] создает отношение типа
"одна запись ко многим" между активной БД и ее дочерними БД, с
которыми ранее установлена связь типа "1:1".
      SET STEP on | OFF открывает диалоговое окно TRACE, устанавливая
режим выполнения программы по шагам.
      SET TALK ON | off устанавливает (ON) режим выдачи на
дисплей информации о выполнении команд. Это удобно при отладке.      
С.274 SET TEXTMERGE [on | OFF] [TO <ИмяФ> [ADDITIVE]] 
[WINDOW <Окно>] [SHOW | NOSHOW] для команд "\", "\\", TEXT ...
ENDTEXT назначает (ON) режим, при котором имена полей БД или другие
выражения, взятые в уголковые скобки, представляют их значения,
включаемые в текст. Полученный итоговый текст может быть направлен
в файл <ИмяФ>.
      SET TRBETWEEN ON | off  в окне TRACE включает режим 
трассировки по точкам прерывания.
С.137 SET TYPEAHEAD TO <Кол-во>  назначает количество символов
(нажатий клавиш), сохраняемых в буфере клавиатуры.
С.268 SET UDFPARMS TO VALUE | REFERENCE  назначает способ передачи
параметров: по значению (VALUE) или по ссылке (REFERENCE).
С.    SET UNIQUE  on | OFF  устанавливает (ON) или отменяет
режим включения в индекс единственной записи для каждого значения
ключа.
      SET VIEW on | OFF открывает или закрывает окно VIEW.
С.281 SET WINDOW OF MEMO TO <Окно> назначает окно для Memo-полей.            
С.347 SHOW GET  повторно отображает GET-объект (см. с.   ).
С.346 SHOW GETS повторно отображает GET-объекты (см. с.   ).
      SHOW MENU <Список BAR-меню> | ALL [PAD <Имя пункта>] [SAVE]
выводит на дисплей ранее описанное BAR-меню без его активации.
С.326 SHOW POPUP <Список POPUP-меню> | ALL [BAR <Номер пункта>][SAVE]
выводит на дисплей ранее описанное POPUP-меню без его активации.      
      SIZE POPUP <Имя POPUP-меню> TO <ВырN >,<ВырN > | BY <ВырN >,
<ВырN > изменяет размер POPUP-меню.
С.52,277  SKIP [<Кол-во>] [IN <Алиас>] перемещает
указатель записи активной БД или БД, заданной <Алиасом>,
на <Кол-во> записей вперед или назад, в зависимости от знака 
<Кол-во>; пример: SKIP -1 (возврат на предыдущую запись).
С.90  SORT TO <ИмяБД> ON <Поле1> [/C | /D] [, <Поле2> [/C | /D] ...] 
[FIELDS <Список полей>] [<Границы>] [<Условия>] [ASCENDING | 
DESCENDING]   копирует в БД <ИмяБД> указанные в <Списке> поля 
множества записей активной БД, заданного <Границами> и <Условиями>, 
располагая записи <ИмяБД> в соответствии с заданным принципом 
сортировки. <Поле1> - старший (возможно единственный) ключ 
сортировки, /C означает лексикографическую сортировку поля типа 
C без учета различий строчных и заглавных букв, /D - сортировку 
по убыванию значений поля. Опции ASCENDING (возрастающий порядок),
DESCENDING (убывающий) являются общим указанием для всех полей.
По умолчанию порядок возрастающий.
С.32  STORE <Выр> TO <Список переменных> присваивает значение <Выр>
всем переменным заданного <Списка переменных>.
С.83  SUM <Список ВырN> TO <Список переменных> [<Границы>][<Условия>]
в активной БД для подмножества записей, заданного <Границами> и
<Условиями> (по умолчанию - для всей БД) находит суммы заданных 
числовых выражений <ВырN>, присваивая значения сумм соответствующим 
переменным из <Списка переменных>.
      SUSPEND приостанавливает работу программы, позволяя выполнить
действия в окне команд: присвоения значений, перемещения в БД и т.п.
С.46  TEXT  воспроизводит на экране следующий за данной командой 
текст, идущий вплоть до ENDTEXT. В отличие от команды CLIPPER опций
не имеет.
С.84  TOTAL ON <Выр> TO <ИмяБД> FIELDS <Cписок полей типа N>
[<Границы>] [<Условия>]  во множестве записей активной БД, заданном
<Границами< и <Условиями>, для каждой группы записей с одинаковым
значением ключа <Выр> находит сумму ("итог") значений каждого поля,
указанного в <Списке полей> и строит "итоговую" запись. Ее структура 
идентична структуре исходных записей и она содержит "итоги" в 
указанных полях, а "неитоговые" поля дублируют информацию первой 
записи группы. "Итоговые" записи помещаются в новую БД <ИмяБД>. 
Активная БД должна быть проиндексирована по ключу <Выр>.
      TYPE <ИмяФ > [TO PRINT] [TO FILE <ИмяФ >] [NUMBER] [AUTO]  
выводит содержимое текстового файла <ИмяФ > (<ИмяФ > записывают 
обязательно с расширением, если оно есть) на экран и (по выбору) 
на принтер или в новый файл с именем <ИмяФ >. NUMBER означает вывод 
в начале каждой строки ее номера, AUTO - автоматический отступ.
Выдача текста на принтер сопровождается разбивкой на страницы и их 
прогоном. Эти действия подавляются установкой  SET HEADING OFF.
С.390 UNLOCK [ALL]  разблокирует файл (запись), т.е. делает их 
доступными для других программ; атрибут ALL означает отмену 
блокирований во всех рабочих областях данной программы.
С.82  UPDATE FROM <Алиас> ON <Выр> REPLACE <Поле > WITH <Выр >
[, <Поле > WITH <Выр > ... ] [RANDOM]  в каждой записи активной БД
замещает значения указанных полей значениями соответствующих
выражений, использующих содержание записи, найденной в БД, указанной
<Алиасом>, по значению ключа <Выр>. Обе БД должны быть
проиндексированы или физически упорядочены по этому ключу, лишь в
случае использования атрибута RANDOM активная БД может быть не
упорядоченной и не проиндексированной по ключу <Выр>.
С.286 USE [<ИмяБД>] [IN <Обл>] [INDEX <Список индексов> [ORDER 
<Ведущий индекс>] [ASCENDING | DESCENDING]]] [ALIAS <Псевдоним>]
[NOUPDATE]  открывает в текущей или указанной аргументом <Обл> рабочей 
области базу данных с именем <ИмяБД>, снабжая ее <Алиасом>, открывая 
индексы (из <Cписка индексов>), и указывая <Ведущий индекс> (иначе 
по умолчанию ведущим станет первый .IDX-файл, а если есть лишь .CDX-
файлы, ведущего индекса не будет). NOUPDATE запрещает изменение БД 
(используется в режиме "только чтение").
      WAIT [<ВырC>] [TO <Имя>] [TIMEOUT <ВырN>] [WINDOW [NOWAIT]]
[CLEAR] приостанавливает программу с выводом в текущую позицию
курсора сообщения <ВырC> или классической фразы "Press any key to
continue ...", если <ВырC> нет. Чтобы избежать сообщения, указывают
пустую строку "". При нажатии какой-либо клавиши, ее символ вводится
в переменную <Имя> (если <Имя> указано) и работа программы 
возобновляется. Если указано <ВырN>, работа возобновится и без нажатия
клавиши через <ВырN> секунд. Вывод сообщения в текущую позицию курсора
не всегда удобен; опция WINDOW направляет его в системное окно
сообщений в правом верхнем углу экрана. NOWAIT отменяет приостановку
программы. CLEAR используется в команде с опцией NOWAIT для удаления
сообщения, выведенного подобной командой ранее.
С.67  ZAP удаляет все записи активной БД (остается ее заголовок).
      ZOOM WINDOW <Окно> MIN [AUTO | FROM <Y>,<X>] | MAX | NORM
[FROM <Y>,<X> [TO <YY>,<XX>]]|[[FROM <Y>,<X>] [SIZE <Кол-во >,<Кол-во >]]
перемещает и/или изменяет размеры окна. Опции: MAX - только изменение
размера до максимума: окно занимает весь экран или "родительское" окно;
MIN AUTO - "минимизация" окна до одного лишь заголовка и "складирование";
MIN - только минимизация; MIN FROM <Y>,<X> - минимизация с перемещением
в новую позицию; NORM - приведение окна к описанному ранее стандартному
размеру, запись опции FROM <Y>,<X> переместит его левый верхний угол в
позицию <Y>,<X>, а добавление TO <YY>,<XX> (новые координаты правого
нижнего угла) еще и установит новый размер типа NORM. Это же можно 
сделать, присоединив опцию SIZE, в которой задают новое число строк 
<Кол-во > и столбцов <Кол-во >. Можно задать только опцию SIZE:
установление нового размера NORM без перемещения.
