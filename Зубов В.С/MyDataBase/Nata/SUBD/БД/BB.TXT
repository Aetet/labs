
                        ПРИЛОЖЕНИЕ 2

       Сводка функций, команд и операторов языка FOXPRO

    Ссылки. В рамках вида      указывается номер страницы, где
рассматривается данная конструкция языка.
    Обозначения. <Выр>,<Мас>,<ИмяФ>,<ИмяБД> или те же обозначения с
индексом представляют соответственно выражение, имя массива, имя
файла, имя БД. Возможная латинская буква в конце указывает тип 
значения (см. п. 1.2). Числовые выражения в ряде определений 
обозначены как <Номер>, <Кол-во>, <Y>, <X>, <Y >, <X > (обычно
пара <Y>,<X> обозначает начальную позицию вывода). Обозначение
рабочей области <Обл> скрывает 2 возможности: числовой номер
области и символьное выражение - буквенное обозначение области
(исключая букву с цифрой) или алиас (имя БД в отсутствие алиаса).
    Термин "Условия" представляет совокупность <FOR-условия> и
<WHILE-условия>, по отдельности обозначаемых <FOR-усл>,<WHILE-усл>.
Присутствие каждого из них не обязательно. <Границы> обозначают
область действия (см. обозначение этих понятий в п. 3.3). 
Необязательные части определяемых конструкций заключены в квадратные
скобки. Альтернативы разделены либо знаком "|", либо словом "или".
Для краткости практически везде умалчивается о случаях "иначе",
например, указываются условия, при которых функция возвращает
"истину" (.T.), и умалчивается об условиях возврата .F..
    Под списком понимается последовательность однородных элементов,
разделяемых запятой, или один такой элемент. Тип результата функции
указывается или словесно, например "возвращает в виде строки ... ",
или - в скобках - буквой, обозначающей тип, например: " (тип N) ".
Все функции SYS (...) возвращают результат в виде строки символов.



                      Функции языка FOXPRO

     ACOPY (<Мас >, <Мас > [,<Номер > [,<Кол-во> [,<Номер >]]])
копирует в <Мас>  <Кол-во> элеиентов <Мас >, начиная с элемента
<Номер >; <Мас > описывать не обязательно. Если указан <Номер >,
размещение копируемых значений начнется в <Мас > с элемента
<Номер >. Если задать <Кол-во>= -1, копируются все элементы <Мас >,
начиная с элемента <Номер >.
     ADEL (<Мас>,<Номер> [,2]), возвращая 1 в случае успеха, удаляет 
(вытесняет)элемент - в одномерном <Мас>, столбец (при задании 3-го
аргумента) или строку - в двумерном <Мас>, указанные <Номером>.
Размер массива сохраняется, а хвостовые ("лишние") элементы получают
значение .F..
     ADIR (<Мас> [,<ВырC > [,<ВырC >]]) помещает в двумерный <Мас>,
который описывать не обязательно, информацию о файлах, имя которых 
удовлетворяет шаблону <ВырC >, возможно включающему путь к файлу
(по умолчанию - о всех файлах текущей директории):
1-й столбец содержит имена файлов (тип C), 2-й - размер файлов 
(тип N), 3-й - даты создания (тип D), 4-й - времена создания (тип C),
5-й - атрибуты файлов (тип C). Задание <ВырC > расширяет поиск,
включая директории (<ВырC > = "D"), скрытые файлы ("H"), системные
файлы ("S"), метки ("V"). Функция возвращает число найденных файлов.
     AELEMENT (<Мас>, <ВырN > [,<ВырN >]) возвращает приведенный
индекс элемента массива <Мас>, находящегося в строке с номером
<ВырN >, столбце <ВырN >. Пример: массив A описан как A[3,4];
функция Aelement(A, 2, 3) возвращает 7.
     AFIELDS (<Мас>) возвращает число полей в активной БД и помещает
в двумерный <Мас>, который описывать не обязательно, информацию о ее
структуре: 1-й столбец содержит имена полей, 2-й - типы полей, 3-й
- их размеры, 4-й - количество знаков после запятой в числовом поле
(в 1 и 2 столбце массива значения типа C, в 3 и 4 - типа N).
     AINS (<Мас> [,<Номер> [,2]), возвращая 1 в случае успеха,
вставляет в <Мас> в указанную <Номером> позицию либо элемент (<Мас>
одномерный), либо столбец (если задан 3-й аргумент), либо строку.
Вставляемые элементы получают значение .F.. Поскольку, начиная с
указанного <Номера>, прежнее содержимое <Мас> вытесняется в 
позиции (строки, столбцы) с большими номерами, последний элемент
(строка, столбец) утрачивается. Перед вставкой элемента одномерного
массива или строки можно заново описать массив, увеличив его размер,
тогда утрачен будет "холостой" элемент или строка.
     ALEN (<Мас> [<ВырN>]) возвращает число элементов <Мас> (если
<ВырN> отсутствует или 0), или число строк (<ВырN>= 1), или число
столбцов (<ВырN> = 2).
     ALLTRIM (<ВырC>) возвращает копию строки <ВырC>, в которой
удалены все ведущие и хвостовые пробелы.
     ASC (<ВырC>) возвращает ASCII-код 1-го символа строки <ВырC>.
     ASCAN (<Мас>, <Выр> [,<Номер> [,<Кол-во>]]) при успешном
поиске возвращает номер (для двумерного <Мас> - приведенный индекс)
элемента <Мас>, имеющего значение <Выр>; при поиске элементы иных
типов просто пропускаются. При неуспешном поиске возвращается 0.
Поиск символьного элемента происходит по правилам режима SET EXACT OFF.
     ASIN (<ВырN>) возвращает арксинус <ВырN> в радианах (от -Пи/2
до Пи/2).
     ASORT (<Мас> [,<Номер> [,<ВырN > [,<ВырN >]]]), примененная к
одномерному <Мас>, сортирует его элементы, начиная с указанного
<Номером> (по умолчанию с 1-го), вплоть до элемента с номером
<ВырN > (по умолчанию - до конца <Мас>) по возрастанию (если <ВырN>
опущено или 0) или по убыванию значений (<ВырN > = 1). Примененная
к двумерному <Мас>, функция переставляет <ВырN > строк (по умолчанию
- все строки) так, что упорядоченными оказываются <ВырN > первых
элементов (по умолчанию - все) столбца, указанного <Номером>. Чтобы
такого рода упорядочивание началось с некоторой строки и захватило
<ВырN > строк, задают <Номер> (приведенный индекс) элемента на
пересечении этой строки и упорядочиваемого столбца. Пример: массив
описан как A[20,3], после выполнения команды  = Asort(A, 33, 10, 1)
последние 10 строк массива переместятся так, что находящиеся в них
элементы 3 столбца будут упорядочены по убыванию. Действительно,
33-й элемент находится на пересечении 3 столбца и 11 строки.
    ASUBSCRIPT (<Мас>, <Номер>, <ВырN>) возвращает номер той строки
(столбца)  <Мас>, где находится элемент с приведенным индексом
<Номер>, в случае <ВырN> = 1  (<ВырN> = 2). Пример: для массива
A[20,3]  Asubscript(A,33,1) возвращает 11, Asubscript(A,33,2) - 3.
    AT (<ВырC >, <ВырC > [,<ВырN>]) возвращает номер начальной позиции 
<ВырN>-го (первого, если <ВырN> опущено) появления подстроки <ВырC > 
в строке <ВырC > или 0 - если искомая подстрока не найдена.
    ATAN (<ВырN>) возвращает арктангенс <ВырN> в радианах (от -Пи/2
до Пи/2).
    ATC (<ВырC >, <ВырC >) работает как AT() с одним отличием:
ATC() не различает прописные и строчные буквы при поиске подстроки.
    ATLINE (<ВырC>, <Memo-поле>) возвращает наименьший номер строки 
Memo-поля, в которой имеется подстрока <ВырC>, или 0, если 
подстрока не найдена.
    ATN2 (<ВырN >, <ВырN >) возвращает арктангенс отношения <ВырN >/
<ВырN >, выраженный в радианах (от -Пи/2 до Пи/2).
    ATCLINE (<ВырC>, <Memo-поле>) работает как ATLINE() с одним
отличием: ATCLINE() не различает прописные и строчные буквы.
    BETWEEN (<Выр >, <Выр >, <Выр >) возвращает .T., только если 
значение <Выр > больше или равно <Выр > и меньше или равно <Выр >. 
Тип всех трех выражений должен совпадать (тип N, D или C).
    BOF([<Обл>]) возвращает .T., если перед обращением к функции была
попытка выйти за начало БД, заданной аргументом (активной БД, если
нет аргумента), или если эта БД пустая.
    CAPSLOCK([<ВырL>]) возвращает состояние клавиши CapsLock (.T.
обозначает, что она включена, .F. - выключена), а затем задает ей
состояние, указанное аргументом (если аргумент есть).
    CDOW (<ВырD>) возвращает название дня недели (тип C) для даты <ВырD>.
    CEILING (<ВырN>) ближайшее целое число, большее или равное <ВырN>.
    CHR (<ASCII-код>) возвращает символ (тип C), имеющий заданный 
ASCII-код.
    CHRTRAN (<ВырC >, <ВырC >, <ВырC >) возвращает измененный дубль
строки <ВырC >, в котором все вхождения i-го символа из <ВырC >
заменены i-м символом из <ВырC >. Если строка <ВырC > короче и в ней
нет i-го символа, в дубле повсеместно исключается i-й символ <ВырC >.
    CHRSAW ([<ВырN>]) возвращает .T. через <ВырN> секунд (немедленно
- в отсутствие аргумента), если буфер клавиатуры не пуст в момент
возвращения значения. Иначе возвращается .F.. Удобна для проверки
факта нажатия клавиши в течение заданного времени <ВырN>.
    CMONTH (<ВырD>) возвращает название месяца (тип C) для даты
<ВырD>.
    CNTBAR (<ВырC>) возвращает число строк в POPUP-меню с именем <ВырC>.
    CNTPAD (<ВырC>) возвращает число пунктов в BAR-меню с именем <ВырC>.
    COL () возвращает номер колонки позиции, которую занимает
курсор на экране (в активном окне, если имеются окна).
    COS (<ВырN>) - косинус аргумента <ВырN>, заданного в радианах.
    CTOD (<ВырC>) возвращает значение типа D, полученное из даты,
представленной строкой <ВырC>, например  "12/31/95".
    CURDIR (<ВырC>) возвращает имя (тип C) текущей директории на
логическом диске, указанном с помощью <ВырC>, например CURDIR("C").
    DATE() возвращает текущую дату (тип D) в используемом формате.
    DAY (<ВырD>) возвращает номер дня (тип N), извлеченный из даты
<ВырD>.
    DBF ([<Обл>]) возвращает имя БД (тип C), указанной аргументом (в 
отсутствие аргумента возвращает имя активной БД).
    DELETED([<Обл>]) возвращает .T., если текущая запись БД в
указанной рабочей области (в активной области, если аргумента нет)
помечена на удаление.
    DIFFERENCE (<ВырC >, <ВырC >) возвращает число 0, 1, 2, 3 или 4,
отражающее степень фонетического сходства <ВырC > и <ВырC >: 4
соответствует минимальному, а 0 - максимальному фонетическому
различию.
    DISKSPACE () возвращает обьем доступного пространства на
дисковом устройстве, установленном по умолчанию.
    DMY (<ВырD>) возвращает символьное представление даты <ВырD>
в европейском формате "День Месяц Год".
    DOW (<ВырD>) возвращает номер дня (тип N) в неделе, полученный 
для даты <ВырD>. Воскресенье имеет номер 1.
    DTOC (<ВырD>) возвращает символьное представление даты <ВырD>.
    DTOR (<ВырN>) возвращает угол в радианах, полученный из
аргумента <ВырN>, задающего угол в градусах.
    DTOS (<ВырD>) возвращает символьное представление даты <ВырD> в
особом формате "ггггммдд" ("г"- цифра года, "м"- месяца, "д" - дня).
    EMPTY (<Выр>) возвращает .T., если значением <Выр> является
"пусто", например <Выр> - это строка, не содержащая литер, или 
числовое выражение со значением 0, или пустая дата { / / }.
    EOF ([<Обл>]) возвращает .T., если указатель записи размещается
на конце БД (на так называемой "призрачной" записи) или БД пуста.
    ERROR () возвращает номер ошибки (в случае перехвата прерывания
командой ON ERROR); функция сохраняет свое значение вплоть до
выполнения команды RETURN или RETRY в блоке обработки ошибки.
    EVALUATE (<ВырC>) возвращает значение выражения любого типа,
которое представлено в символьном виде <ВырC>. Рекомендуется для
замены операции макроподстановки всюду, где это возможно.
    EXP (<ВырN>) возвращает экспоненту - значение основания
натурального логарифма, возведенное в степень <ВырN>.
    FCHSIZE (<Номер>, <ВырN>) в случае успеха производимого ею 
изменения размера файла возвращает новый размер <ВырN> двоичного 
файла, указанного идентификатором файла <Номер>, иначе возвращает
-1.
    FCLOSE (<Номер>) закрывает указанный идентификатором <Номер>
двоичный файл и возвращает .T.. Если файл не может быть закрыт,
возвращается .F..
    FCOUNT ([<Обл>]) возвращает число полей в открытой БД,
указанной аргументом (в активной БД, если аргумента нет).
    FCREATE (<ВырC> [,<ВырN>]) создает двоичный файл с именем
<ВырC> и атрибутами <ВырN> (по умолчанию - файл для чтения и
записи), возвращая идентификатор файла (тип N). Значения <ВырN>:
1 - только чтение; 2 - скрытый файл; 4 - системный файл; возможны
комбинации, например 3 = 1+2 (скрытый файл только для чтения).
    FEOF (<Номер>) возвращает .T., если указатель файла с
идентификатором <Номер> позиционирован в конце файла (байт 
содержит символ с кодом 26), иначе возвращается .F..
    FERROR () возвращает 0, только если последняя ("ближайшая")
низкоуровневая функция работы с двоичными файлами не вызвала 
ошибки, иначе возвращается числовое значение, обозначающее ошибку.
    FFLUCH (<Номер>) переписывает в файл содержимое буфера,
открытого ранее для двоичного файла, указанного идентификатором
<Номер> и освобождает память, занятую буфером. Закрытия файла
не происходит.
    FGETS (<Номер> [,<ВырN>]) возвращает как строку символов
серию байтов двоичного файла, заданного идентификатором <Номер>,
от текущего положения указателя до байта с символом "возврат 
каретки" (не включая его), но не более <ВырN> байтов (по 
умолчанию - 254). Соответственно указатель файла смещается.
    FIELD (<Номер> [,<Обл>]) возвращает имя поля, заданного
<Номером>, открытой БД, указанной 2 аргументом (активной БД,
если 2 аргумента нет).
    FILE (<ВырC>) возвращает .T., если файл с именем <ВырC> найден.
Имя должно включать расширение, если оно есть. Если указано только
имя файла, поиск ведется в текущей директории, а затем по маршруту,
установленному для FOXPRO (если установка производилась). Если
задано полное имя файла, поиск ограничивается указанной директорией.
    FILTER ([<Обл>]) для указанной аргументом открытой БД (для
активной БД, если аргумента нет) возвращает символьное выражение
действующего фильтра, иначе возвращается пустая строка.
    FKLABEL (<ВырN>) возвращает имя функциональной клавиши по
ее номеру <ВырN>, который не должен быть больше FKMAX() (см. ниже),
иначе возвращается пустая строка.
    FKMAX() возвращает число программируемых функциональных клавиш.
    FLOCK ([<Обл>]) делает попытку заблокировать открытую в режиме
разделения БД, указанную аргументом (активную БД, если аргумента
нет) и возвращает .T., если попытка успешна.
    FLOOR (<ВырN>) - ближайшее целое, не превосходящее значение <ВырN>.
    FOPEN (<ВырC> [,<ВырN>]) открывает двоичный файл, указанный
именем <ВырC> (обязательно с расширением, если оно есть), и 
возвращает идентификатор файла, используемый в следующих командах
работы с файлом. Если файл не удалось открыть, возвращается  -1.
Поиск файла происходит так же, как и в FILE() (см. выше).
    FOUND ([<Обл>]) возвращает .T., если выполнилась успешно 
последняя команда поиска (SEEK, FIND, LOCATE или CONTINUE) в 
открытой БД, указанной аргументом <Обл> (в активной БД, если 
аргумента нет). Иначе, а также если в указанной области нет открытой
БД, возвращается .F.. Система хранит значения Found() для каждой
рабочей области.
    FPUTS (<Номер>, <ВырC> [,<ВырN>]) записывает в двоичный файл,
указанный идентификатором <Номер>, строку <ВырC> или начальную ее
часть, содержащую <ВырN> символов. В файл дополнительно записываются
символы "возврат каретки" и "перевод строки". Функция возвращает
число записанных символов или 0, если попытка записи неуспешна. Если
<ВырN> больше числа символов в <ВырC>, записывается вся строка <ВырC>.
При записи указатель файла смещается на соответствущее число байтов.
    FREAD (<Номер>, <ВырN>) делает попытку прочесть <ВырN> байтов
из двоичного файла, указанного идентификатором <Номер>, возвращая
их как символьную строку. Будет возвращено меньшее их число, если 
от текущего положения указателя файла до конца файла меньше, чем 
<ВырN> байтов. При чтении указатель файла смещается.
    FSEEK (<Номер>, <Кол-во> [,<ВырN>]) перемещает указатель
двоичного файла на <Кол-во> байтов, отсчитываемых от начала (конца) 
файла, если <ВырN> = 0 ( <ВырN> = 2) или от текущей позиции указателя 
(<ВырN>= 1), возвращая новую позицию указателя (тип N). Если отсчет 
идет от конца файла, <Кол-во> должно быть отрицательным, а при 
отсчете от текущей позиции знак может быть любой. Пример:
 P = Fseek(N, 0, 1). Возвращается текущая позиция указателя.
    FSIZE (<ВырC> [,<Обл>]) возвращает размер поля  открытой БД,
указанной 2 аргументом (активной БД, если 2 аргумента нет).
    FULLPATH (<ВырC > [,<ВырN>|<ВырC >]) для файла с именем <ВырC > 
(расширение имени обязательно указывать, если оно есть) возвращает 
или полный маршрут DOS (для этого надо записать 2 аргументом <ВырN>
с произвольным значением), или полный маршрут относительно файла с
именем <ВырC >(расширение имени также обязательно указать).
    FV (<ВырN >, <ВырN >, <ВырN >) возвращает прогнозируемое
значение суммы вклада, образующейся за счет <ВырN > периодических
взносов величиной <ВырN >(ежемесячных, ежегодных и т.п.) с учетом 
прироста по процентам; <ВырN > - это  д о л я  периодической    
прибыли, например, если вклады ежемесячны, то <ВырN> - это доля 
прибыли в пересчете на один месяц. Пусть в течение 4 лет ежемесячный 
взнос составляет 50 долларов, неизменный годовой процент - 7.5 % .
 ? FV(50, .075/12, 48)    && Выводится значение 2788.79 (долларов).
    FWRITE (<Номер>, <ВырC> [,<ВырN>]) записывает в двоичный файл,
указанный идентификатором <Номер>, строку <ВырC> или (если задано
<ВырN>) <ВырN> начальных символов строки <ВырC> и возвращает число
записанных символов или 0 - при неуспешной записи. При записи
указатель файла смещается на соответствующее число байтов. Если
<ВырN> больше числа символов в <ВырC>, записывается вся строка <ВырC>.
Fwrite() отличается от Fputs() только тем, что не размещает в конце 
серии записанных байтов символы "возврат каретки", "перевод строки".
    GETBAR (<ВырC>, <ВырN>) для POPUP-меню с именем <ВырC>
возвращает номер пункта, размещающегося в позиции <ВырN> меню.
Меню может не быть активным.
    GETENV (<ВырC>) возвращает содержимое переменной окружения,
указанной аргументом, в виде символьной строки.  Пример.
? Getenv ("PATH")  && Выводится строка, например "C:\COMM;C:\FOXPRO2"    
    GETPAD (<ВырC>, <ВырN>) для BAR-меню с именем <ВырC> возвращает
номер пункта, занимающего позицию <ВырN> линейки меню. Меню может
не быть активным.
    GOMONTH (<ВырD>, <ВырN>) возвращает дату (тип D), отстоящую от
даты <ВырD> на <ВырN> месяцев; при отрицательном <ВырN> возвращается
дата, которая меньше <ВырD>.
    HEADER ([<Обл>]) возвращает размер заголовка открытой БД,
указанной аргументом (активной БД, если аргумента нет).
    IIF (<ВырL>, <Выр >, <Выр >) вычисляет и возвращает значение
выражения <Выр > ( <Выр >), если <ВырL> =.T. ( <ВырL> =.F.).
Выражения <Выр >, <Выр > не обязательно одного типа.
    INKEY ([[<ВырN>] [,<ВырC>]]) возвращает очередной клавишный код
из буфера клавиатуры, который от этого кода освобождается, или 0,
если буфер клавиатуры был пуст и в течение <ВырN> секунд не была
нажата любая клавиша. Если <ВырN> опущено, ожидания нажатия нет.
Если <ВырN> = 0, ожидание не ограничивается. Чтобы щелчки мыши
также воспринимались функцией Inkey, задают <ВырC> = "M", при этом
возвращается код 151 (прочие клавишные коды см. в приложении 4).
Курсор выключается (включается), если <ВырC> = "H" (<ВырC> = "S").
Допустимы сочетания "MH", "MS".  См. также функцию LASTKEY().
    INLIST (<Выр>, <Список выражений>) возвращает .T., если значение
<Выр> совпадает со значением какого-либо выражения из списка. Все
выражения должны быть одного типа (тип N, C, D или L). Пример:
 ? Iif (INLIST( Month(Date()), 7, 8), "Каникулы!", "Работа ...")
    INSMODE ([<ВырL>]) возвращает состояние клавиши Insert (.T. 
означает, что она включена, .F. - выключена), а затем задает ей 
состояние, указанное аргументом (если аргумент есть). Пример:
 = Insmode(.F.)  && Выключаем режим вставки (или подтверждаем .F.)
 ? Insmode(.T.)  && Включаем режим вставки, но выводится значение .F.
    INT (<ВырN>) возвращает целую часть значения <ВырN> с сохранением
знака.
    ISALPHA (<ВырC>) возвращает .T., если <ВырC> начинается с буквы.
    ISCOLOR () возвращает .T., если система способна отображать цвет.
    ISDIGIT (<ВырC>) возвращает .T., если <ВырC> начинается с цифры.
    ISLOWER (<ВырC>) возвращает .T., если <ВырC> начинается со строчной
буквы.
    ISUPPER (<ВырC>) возвращает .T., если <ВырC> начинается с прописной
буквы.
    LASTKEY ( ) возвращает число - клавишный код (см. приложение 4) 
из так называемой клавишной ячейки, куда он был перемещен из буфера
клавиатуры при выполнении INKEY() или READ. Код в ячейке сохраняется
до нового такого перемещения.
    LEFT (<ВырC>, <ВырN>) возвращает строку, состоящую из <ВырN>
начальных символов заданной строки <ВырC>.
    LEN (<ВырC>) возвращает число символов (длину) <ВырC>.
    LIKE (<ВырC >, <ВырC >) возвращает .T., если выражение <ВырC >
содержится в <ВырC >. В <ВырC > могут быть символы маски "?" 
(заменяет любой один символ), "*" (заменяет группу символов, хотя
бы и пустую). Символы маски позволяют исключать из процесса
сравнения те или иные символы <ВырC >. Пример: в следственном деле
есть неразборчивая запись телефона; непонятны первые 2 и 6-я цифры.
Используется функция Like("*2-76-?3", Tel), где Tel - поле БД, для
выявления всех записей, в которых значение Tel соответствует шаблону.
Если действует установка SET COMPATIBLE ON, хвостовые пробелы <ВырC >
и <ВырC > не учитываются при сравнении. 
    LINENO ([1]) возвращает абсолютный (отсчитываемый от начала
.PRG-файла) или относительный (от начала блока) номер выполняемой
строки программы; в последнем случае надо задать аргумент 1.
    LOCKFILE (<ВырC > [,<ВырC >] [,<ВырС >]) возвращает имя файла
<ВырC >, дополненное маршрутом (если данный файл найден, в
противном случае предоставляется окно диалога "Открыть файл" для
"ручного" поиска). Имя файла может не иметь расширения, ибо  
предполагаемые расширения могут быть записаны в виде строки <ВырC >, 
например: "PRG; FXP". <ВырC > - это необязательное приглашение,
предьявляемое в окне "Открыть файл".
    LOCK ([<ВырC>,] [<Обл>]) пытается в открытой БД, указанной 
аргументом <Обл> (в активной БД, если нет аргумента <Обл>),
заблокировать текущую (если <ВырC> опущено) запись или все записи, 
указанные в <ВырC> списком номеров, и возвращает .T. при успехе
блокирования. Даже если одна запись осталась незаблокированной, 
функция возвращает .F. при сохранении осуществленных блокирований. 
Применять функцию для блокирования нескольких записей можно, лишь
установив режим SET MULTILOCK ON. Пример: Lock("4,5,6", "B").
    LOG (<ВырN>) - значение натурального логарифма числа <ВырN>.
    LOG10(<ВырN>) - значение десятичного логарифма числа <ВырN>.
    LOOKUP (<Поле >, <Выр>, <Поле > [,<ВырC>]) возвращает
значение символьного <Поля > записи активной БД, найденной по
условию <Поле > = <Выр>, или пустую строку, если запись не найдена.
Функция исследует ведущий индекс (если он есть), и если его ключ
соответствует <Полю >, выполняет ускоренный поиск (как SEEK),
иначе идет поиск с использованием LOCATE. <ВырC> - имя тега
.CDX-файла - задают, если ключ тега соответствует <Полю >, чтобы
ускорить поиск. Пример: ключ тега - сумма полей  Fak + Kurs, 
как <Поле > в LOOKUP используется Fak. Указание тега в LOOKUP
ускорит поиск, ибо <Поле > является старшей частью ключа.
    LOWER (<ВырC>) возвращает строку - копию <ВырC>, в которой
все прописные буквы заменены строчными.
    LTRIM (<ВырC>) возвращает копию <ВырC>, в которой удалены
ведущие пробелы.
    LUPDATE ([<Обл>]) возвращает дату (тип D) последнего обновления 
открытой БД, указанной аргументом (активной БД, если аргумента
нет). Если в указанной области БД не открыта, возвращается пустая
строка.
    MAX (<Список выражений>) возвращает наибольшее из значений
выражений. Все выражения должны быть одного типа (тип N, D или C).
Для типа C наибольшим считается значение, расположенное последним
при словарной упорядоченности.
    MCOL ([<ВырC>]) возвращает номер колонки экрана или окна, в
которой находится маркер мыши. Номер колонки относительно окна
возвращается либо для активного окна (если оно есть), либо для
окна, имя которого указано в виде необязательного аргумента <ВырC>.
В остальных случаях возвращается номер колонки экрана.
    MDOWN () возвращает .T., если в момент обращения к функции
левая кнопка мыши в нажатом состоянии.
    MDX (<Номер> [,<Обл>]) для открытой БД, указанной аргументом
<Обл> (для активной БД, если аргумент <Обл> опущен) возвращает имя 
открытого .CDX-файла, указанного <Номером>. Номер 1 имеет структурный 
.CDX-файл, а прочие получают номера, начиная с 2, в порядке их 
открытия и указания в списке индексов. Например, если часть файлов 
открыта в USE, а остальные - с помощью SET INDEX TO, то начальные 
номера получат CDX-файлы, открытые в USE, в порядке их указания.
    MDY (<ВырD>) возвращает символьное представление даты <ВырD>,
соответствующее американскому стандарту: "Месяц дд гг", где "д",
"г" - цифры (день и год), а "Месяц" - английское название месяца.
Если действует установка SET CENTURY ON, год изображается 4
цифрами. Пример: ? Mdy({03/21/73}) && Выводится "March 21, 1973".
    MEMLINES (<Memo-поле>) возвращает число строк в <Memo-поле>,
зависящее от установки SET MEMOWIDTH ("ширина строки").
    MEMORY () возвращает размер свободной памяти в Кбайтах (тип N).
    MESSAGE ([1]) в отсутствие аргумента возвращает текст сообщения
о последней ошибке (используется обычно в блоке обработки ошибок),
если аргумент 1 задан, возвращается текст ошибочной строки программы.     
    MIN (<Список выражений>) возвращает наименьшее из значений
выражений. Все выражения должны быть одного типа (тип N, D или С).
Для типа C наименьшим считается значение, расположенное первым
при словарной упорядоченности.
    MLINE (<Memo-поле>, <Номер> [,<ВырN>]) возвращает строку
<Memo-поля> с указанным <Номером>. Результат имеет тип C  и 
зависит от установки SET MEMOWIDTH  ("ширина строки"). Аргумент
<ВырN> используют для задания смещения от начала Memo-поля (с
целью экономии времени при последовательной обработке строк).
В этом случае отсчет строк идет от точки смещения.
    MOD (<ВырN >, <ВырN >) возвращает остаток от деления <ВырN >
на <ВырN >. Результат имеет столько знаков после точки, сколько 
в <ВырN >.
    MONTH (<ВырD>) возвращает номер месяца (тип N), извлеченный
из даты <ВырD>.
    MRKBAR (<ВырC>, <Номер>) возвращает .T., если помечен пункт 
POPUP-меню <ВырC>, указанный <Номером>.
    MRKPAD (<ВырC>, <Номер>) возвращает .T., если помечен пункт
BAR-меню <ВырC>, указанный <Номером>.
    MROW ([<ВырC>]) возвращает номер строки экрана или окна, в
которой находится маркер мыши. Номер строки относительно окна
возвращается или для активного окна (если оно есть), или для окна,
имя которого указано в виде необязательного аргумента <ВырC>. В
остальных случаях возвращается номер строки экрана.
    NDX (<Номер> [,<Обл>]) для открытой БД, указанной аргументом
<Обл> (для активной БД, если аргумент <Обл> опущен) возвращает имя 
открытого .IDX-файла, указанного <Номером>. .IDX-файлы нумеруются
в порядке их открытия и указания в списке индексов (без учета
.CDX-файлов). Например, если все или часть .IDX-файлов открыта в
команде USE, то номер 1 получит первый по списку .IDX-файл,
указанный в USE, а индексы, открытые позднее, получат номера
после .IDX-файлов из списка команды USE.
    NETWORK () возвращает значение .T., если используется сетевая
версия FOXPRO/LAN.
    NUMLOCK ([<ВырL>]) возвращает состояние клавиши NumLock (.T.
означает, что она включена, .F. - выключена), а затем задает ей
состояние, указанное аргументом (если аргумент есть). Пример:
=Numlock (NOT Numlock()) && Переключение в противоположное состояние.
    OBJNUM (<Имя GET-поля> [,<ВырN>] ) возвращает номер GET-обьекта
по заданному имени GET-поля  для  текущего или указанного с помощью
<ВырN> уровня READ.
    OCCURS (<ВырC >, <ВырC >) возвращает число появлений <ВырC > в
строке <ВырC > (0, если вхождений <ВырC > в <ВырC > не обнаружено).
С.333 ON (<ВырC > [,<ВырC >]) возвращает в виде строки текст
команды, назначенной в команде ON ERROR, ON ESCAPE, ON KEY,
ON KEY LABEL, ON PAGE, ON READERROR: <ВырC > указывает на одну
из них, представляя ключевое слово команды без "ON", например
"ERROR". Записывая 1-м арументом "KEY LABEL", указывают и 2-й
- обозначение клавиши в виде строки, например: ON("KEY LABEL","F8")
(возвращается текст команды, назначенной клавише F8). Команды
ON KEY и ON KEY LABEL "конкурируют": текст команды можно получить
лишь для одной из них - той, которая выполнялась последней, а 
для другой будет возвращена пустая строка.
    ORDER ([<Обл> [,<ВырN>]]) для открытой БД, указанной аргументом
<Обл> (для активной БД, если этот аргумент опущен), возвращает имя 
ведущего .IDX-файла или тега или полное имя - если задан 2-й
аргумент <ВырN> с любым значением.
    OS () возвращает в виде символьной строки название и номер
операционной системы, в которой работает FOXPRO.
    PAD () возвращает в виде строки имя выбранного последним пункта 
активного BAR-меню. Если нет активного BAR-меню или функция выдана 
из командного окна, возвращается пустая строка.
    PADC (<Выр>, <ВырN> [,<ВырC>]) возвращает символьное представление
<Выр>, симметрично дополненное справа и слева нужным числом символов
<ВырC> для получения заданной длины <ВырN> возвращаемой строки. По 
умолчанию строка дополняется пробелами.
    PADL (<Выр>, <ВырN> [,<ВырC>]) отличается от функции PADC() тем,
что возвращаемая строка дополняется символами (пробелами) лишь слева.
    PADR (<Выр>, <ВырN> [,<ВырC>]) отличается от функции PADC() тем,
что возвращаемая строка дополняется символами (пробелами) лишь справа.
    PARAMETERS () возвращает число параметров в последнем вызове
блока, будучи используемой в теле этого блока.
    PAYMENT (<ВырN >, <ВырN >, <ВырN >) возвращает размер периодической 
выплаты для погашения займа <ВырN > за <ВырN > таких выплат при 
неизменной процентной ставке <ВырN >, переведенной в обычную дробь и
согласованной с периодичностью выплат. Например, если годовая 
процентная ставка равна 10 %, а выплаты ежемесячные, <ВырN > = 0.1/12 .
Пример: заем в $10000 надо погасить за 2 года при 10 % годовых и
помесячной выплате. ? Payment(10000, .1/12, 24)   && Выплата $461.45 
    PCOL () возвращает текущую позицию колонки на принтере (тип N).
    PI () возвращает число Пи, вычисленное с большим числом знаков.
    POPUP () возвращает в виде строки имя активного POPUP-меню.
Если нет активного POPUP-меню или функция выдана из окна команд,
возвращается пустая строка.
    PRINTSTATUS () возвращает .T., если принтер в состоянии готовности.
    PRMBAR (<ВырC>,<Номер>) возвращает текст указанного <Номером>
пункта POPUP-меню с именем <ВырC>. Это меню не обязательно активно.
Специальные символы "\<" и "\" не возвращаются. Если <Номер> ошибочен,
выдается сообщение об ошибке.
    PRMPAD (<ВырC >, <ВырC >) для BAR-меню с именем <ВырC > (это
меню не обязательно активно) возвращает текст пункта с именем <ВырC >.
    PROGRAM ([<ВырN>]) возвращает в виде строки имя блока, 
выполняющегося в данный момент, или блока, выполнявшегося в момент 
возникновения ошибки. В последнем случае эта функция указывается как 
параметр при обращении к блоку обработки ошибок и используется в момент 
перехвата прерывания. Параметр <ВырN> используется (необязательно) при 
вложенности вызовов блоков. Тогда Program(1) возвращает имя главного
блока, Program(2) - имя вызванного им блока и т.д. Программы могут
быть вложены на глубину до 32 уровней. Если аргумент функции
превышает реальную глубину вложений, она возвращает пустую строку.
    PROMPT () возвращает в виде строки текст выбранного пункта
активного BAR- или POPUP-меню. Если активного меню нет или функция
выдана из окна команд, возвращается пустая строка.
    PROW () возвращает текущую позицию строки на принтере (тип N).
    PUTFILE ([<ВырC> [,<ИмяФ>] [,<ВырC>]) предьявляет диалоговое
окно SAVE AS ("Сохранить под именем ...") с текстом строки <ВырC>
на верхней границе окна (если приглашение <ВырC> задано) и с
именем сохраняемого файла по умолчанию <ИмяФ>, которое можно
заменить другим именем, в частности, выбирая его из списка имен
имеющихся файлов. <ВырC> содержит расширения имен файлов,
представляемых в этом списке.
     PV (<ВырN >, <ВырN >, <ВырN >) определяет сумму, помещение
которой в банк под проценты, даст итог, равный <ВырN >*<ВырN >,
где <ВырN > - количество периодических выплат за тот же период
времени, <ВырN > - размер выплаты, а <ВырN > - процентная ставка
банка, переведенная в обычную дробь и согласованная с периодом
выплат. Если годовой процент равен 7.5, а выплаты ежемесячные,
<ВырN > = 0.075/12. Другими словами, с помощью функции PV()
можно найти текущий эквивалент будущих суммарных дивидендов (его
называют также стоимостью ренты, а процесс пересчета -
дисконтированием или учетом векселей).  Пример. Владельцу
помещения сделано 2 предложения сдать помещение в аренду а) на
5 лет с ежегодной выплатой ему $6000, производимой помесячно; 
б) на 4 года с разовой выплатой $22000, производимой немедленно.
Пересчет 24000 долларов, которые были бы получены за четыре года 
от 1-го клиента, производит функция PV(500, 0.075/12, 48).
Результат $20679.19 значительно уступает предложению 2 клиента.
    RAND ([<ВырN>]) возвращает псевдослучайное число в диапазоне
от 0 до 1. Аргумент <ВырN> (по умолчанию 100001) служит для
задания отправной точки и позволяет вырабатывать различные 
последовательности пседослучайных чисел. Если задать <ВырN> = -1,
отправная точка получается с помощью таймера ПЭВМ. Аргумент
указывают лишь при первом обращении к функции. Для получения
вещественных псевдослучайных чисел, равномерно распределенных
на отрезке [A,B] записывают A + (B-A)*Rand(), для получения
целых - Int(A + (B-A+1)*Rand()).
    RAT (<ВырC >, <ВырC > [,<ВырN>]) возвращает номер начальной
позиции <ВырN>-го (последнего, если <ВырN> опущено) появления
подстроки <ВырC > в строке <ВырC > (отсчет идет от конца <ВырC >).    
Если искомая подстрока не найдена, возвращается 0.
    RATLINE (<ВырC>, <Memo-поле>) возвращает наибольший номер
строки <Memo-поля>, в которой имеется подстрока <ВырC>, или 0,
если подстрока не найдена.
    RDLEVEL () возвращает уровень вложенности (тип N) действующей в
данный момент команды READ (0, если вложений нет). Максимальный
уровень вложения равен 5.
    READKEY ([<ВырN>]), если задан аргумент с любым числовым 
значением, возвращает код, обозначающий клавишу, нажатую для
выхода из READ. Если <ВырN> опущено, возвращается код последней
нажатой клавиши выхода из команд APPEND, BROWSE, CHANGE, CREATE,
EDIT, INSERT, MODIFY, READ.
    RECCOUNT ([<Обл>]) возвращает число записей в открытой БД,
указанной аргументом (в активной БД, если аргумента нет). Записи,
помеченные на удаление, также учитываются.
    RECNO ([<Обл>]) возвращает номер текущей записи в открытой БД,
указанной аргументом (в активной БД, если аргумента нет).
    RECSIZE ([<Обл>]) возвращает размер записи в открытой БД,
указанной аргументом (в активной БД, если аргумента нет).
    RELATION (<Номер> [,<Обл>]) возвращает в виде строки указанное
<Номером> выражение связи для открытой БД, указанной аргументом
<Обл> (для активной БД, если аргумент <Обл> опущен), или пустую
строку, если для данной БД связи не установлены.
    REPLICATE (<ВырC>, <ВырN>) возвращает символьную строку,
полученную повторением <ВырC>  <ВырN> раз.
С.25 RIGHT(<ВырC>, <ВырN>) возвращает строку, состоящую из <ВырN>
последних символов строки <ВырC>, т.е. подстроку <ВырC>.
С.390 RLOCK () полностью аналогична функции LOCK() (см. выше).
С.21 ROUND (<ВырN>, <Кол-во>) возвращает значение <ВырN>,
округленное до <Кол-во> знаков после десятичной точки (до точки),
если <Кол-во> неотрицательно (отрицательно). Число знаков после
точки в возвращаемом значении - такое же, как в исходном числе. 
Например, Round(27345.83, 1) возвращает 27345.80, Round(27345.83, 0)
-  27346.00, Round(27345.83, -3) -  27000.00 .
С.47 ROW () возвращает номер строки экрана или активного окна (если
оно есть), в которой находится курсор. В выражениях координат Row()
можно заменять символом $.
С.22 RTOD (<ВырN>) возвращает значение угла в градусах, полученное
из его радианной меры <ВырN>.
С.25 RTRIM (<ВырC>) возвращает копию строки <ВырC>, удалив в копии
хвостовые пробелы.
     SCHEME (<Номер> [,<ВырN>]) возвращает в виде строки список
цветовых пар цветовой схемы, указанной <Номером> (если <ВырN>
опущено) или <ВырN>-ю цветовую пару этой схемы.
     SCOLS () возвращает число колонок, доступных на экране
(зависит от установки SET DISPLAY).
     SECONDS () возвращает системное время в секундах (тип N),
отсчитываемое с полуночи (см. пример 23.2).
     SEEK (<ВырN>, [,<Обл>]) возвращает .T., если в открытой БД,
указанной атрибутом <Обл> (в активной БД, если аргумент <Обл>
опущен) найдена запись с ключом индекса, равным <Выр>. Номер
найденной записи - Recno().
     SELECT ([0|1]) возвращает номер (тип N) текущей рабочей
области, если аргумент опущен или равен 0. Если аргумент равен 1,
возвращается наименьший номер свободной рабочей области.
     SET (<ВырC> [,1]) возвращает в виде строки текущий статус
SET-установки, заданной аргументом <ВырC> (см. левую колонку
таблицы в приложении 5). Например, SET("CONSOLE") возвращает
"ON" или "OFF". Если SET-установка имеет 2 варианта:
а) SET ... ON|OFF; б) SET ... TO ... , то для получения текущего
статуса варианта "б" указывают дополнительно 2-й аргумент.
Пример.  SET("ALTERNATE",1)  && Выводится имя файла "C:\FOXB\PRIM.TXT".
С.21 SIGN (<ВырN>) возвращает знак <ВырN> в виде числа -1 (<ВырN> < 0),
0 (<ВырN> = 0), 1 (<ВырN> > 0).
С.21 SIN (<ВырN>) - синус угла <ВырN>, заданного в радианах.
С.26 SPACE (<ВырN>) возвращает строку, состоящую из <ВырN> пробелов.
     SROWS () возвращает число строк, доступных на экране.
С.21 SQRT (<ВырN>) - квадратный корень из числа <ВырN>.
С.31 STR (<ВырN > [,<ВырN > [,<Кол-во>]]) возвращает представление
числа <ВырN > в виде символьной строки, имеющей длину <ВырN >, с
<Кол-во> знаками в дробной части (в необходимых случаях происходит
округление). По умолчанию длина строки равна 10, а дробная часть
- не показана. 
С.26 STRTRAN (<ВырC >, <ВырC > [,<ВырC >] [,<ВырN >] [,<ВырN >])
возвращает копию строки <ВырC >, в которой каждое вхождение подстроки
<ВырC > заменено строкой <ВырC > (или пустой строкой, если <ВырC >
опущено). Используя <ВырN >, <ВырN >, можно указать для замены
вхождения <ВырC >, начиная с <ВырN >-го и заканчивая <ВырN >-м.
С.26 STUFF (<ВырC >, <Номер>, <Кол-во>, <ВырC >) возвращает копию
строки <ВырC >, в которой подстрока, начинающаяся в позиции,
указанной <Номером>, и содержащая <Кол-во> символов, заменена
подстрокой <ВырC >. Если надо только исключить из <ВырC > указанную
подстроку, в качестве <ВырC > задают пустую строку, а если надо
вставить <ВырC >, ничего не удаляя, то задают <Кол-во> = 0.
С.25 SUBSTR (<ВырC>, <Номер> [,<Кол-во>]) возвращает подстроку
строки <ВырC>, начинающуюся в позиции, указанной <Номером>, и
содержащую <Кол-во> символов. Если <Кол-во> не указано, конец
строки и подстроки совпадает.
    SYS (1) - номер дня по Юлианскому календарю.
    SYS (2) - число секунд, прошедших с полуночи (в виде строки !).
    SYS (3) возвращает уникальное имя файла (используют для временных
файлов). Пример: Name = SYS(3) + ".DBF" (запоминание имени необходимо
для дальнейшего доступа к файлу).
    SYS (5) возвращает имя активного по умолчанию диска.
    SYS (6) возвращает обозначение принтера "PRN:" или <Имя файла>,
если действует установка SET PRINTER TO <Имя файла>.
    SYS (7) возвращает имя текущего файла формата или пустую строку,
если файл формата в данный момент не используется.
    SYS (9) возвращает серийный номер вашего экземпляра FOXPRO.
    SYS (10, <ВырN>) возвращает символьное представление даты для
указанного номером <ВырN> дня (по Юлианскому календарю).
    SYS (11, <ВырD>|<ВырC>) возвращает номер дня по Юлианскому
календарю, полученный для даты <ВырD> или символьного представления
даты <ВырC>.
    SYS (12) возвращает число байт свободной памяти (в виде строки !).
    SYS (13) возвращает строку "READY" ("готов") или "OFFLINE" ("не
подключен"), отражающую готовность принтера.
    SYS (14, <Номер> [,<ВырN>]) возвращает индексное выражение для
индекса, указанного <Номером>, в рабочей области <ВырN> (в текущей
области, если <ВырN> опущено).
    SYS (15, <ВырC >, <ВырC >) возвращает копию строки <ВырC >, в
заменены символы в соответствии с перекодировочной таблицей <ВырC >
В роли <ВырC > может выступать строка, хранимая в файле с именем
EUROPEAN.MEM .
    SYS (16 [,<ВырN>]) эквивалентна функции Program (см. выше).
    SYS (17) возвращает обозначение используемого процессора.
    SYS (18) возвращает имя поля, в которое вводились данные,
когда была нажата "горячая" клавиша ON KEY.
    SYS (21) возвращает номер главного управляющего индекса или 
тега, используемого в текущей рабочей области. 
    SYS (22 [,<Номер>]) возвращает имя ведущего индекса или тега 
для открытой БД, указанной <Номером> рабочей области (для текущей
области, если <Номер> отсутствует).
    SYS (24) возвращает предел памяти EMS, который был установлен
при старте в файле конфигурации CONFIG.FP.
    SYS (100) возвращает текущий статус SET CONSOLE ("ON" или "OFF").
    SYS (101) возвращает текущий статус SET DEVICE ("SCREEN","PRINT"
или <Имя файла>, указанного в команде SET DEVICE <Имя файла> .
    SYS (102) возвращает текущий статус SET PRINTER ("ON" или "OFF").
    SYS (103) возвращает текущий статус SET TALK ("ON" или "OFF").
    SYS (1001) возвращает размер всей доступной памяти ПЭВМ, включая
значения от 640 Кбайт до 1 Мбайт (Memory() "работает" до 640 Кбайт).
    SYS (1016) возвращает размер памяти в байтах, занятой временными
переменными, окнами, меню и открытыми файлами.
    SYS (2003) возвращает имя текущей директории на диске по умолчанию.
    SYS (2004) возвращает полное имя директории, содержащей FOXPRO.
    SYS (2005) возвращает полное имя активного файла ресурсов.
    SYS (2006) возвращает тип используемого графического адаптера и
монитора.
    SYS (2007, <ВырC>) возвращает контрольную сумму для строки <ВырC>.
    SYS (2008 [,<ВырC> [,<ВырN>]]) задает форму курсора для режима 
вставки и режима замещения: подчерк (<ВырN> = 0), блок (<ВырN> = 1)
и полублок (<ВырN> = 2). <ВырC> задает режим (буквой): "I" - вставка,
"O" - замещение.
    SYS (2009) заменяет форму курсора для режимов вставки и замещения:
формой для вставки становится форма, использовавщаяся для замещения,
и наоборот.
    SYS (2010) возвращает в виде строки установку опции FILES в
пользовательском файле конфигурации CONFIG.SYS.
    SYS (2013) возвращает разделенные пробелами имена пунктов системного
меню и подменю FOXPRO.
    SYS (2014, <ВырC > [,<ВырC >]) возвращает минимальный путь между
файлом с именем <ВырC > и директорией с именем <ВырC > (текущей
директорией, если <ВырC > опущено).
    SYS (2016) возвращает имя окна, указанного в последней команде
SHOW GETS WINDOW.
    SYS (2017) очищает экран, предьявляя заставку FOXPRO.
    SYS (2018) возвращает дополнительную информацию к сообщению
об ошибке (например, имя переменной, которая не найдена).
    SYS (2019) возвращает полное имя файла CONFIG.FP.
    SYS (2020) возвращает общий объем диска, используемого по 
умолчанию (в байтах).
    SYS (2021, <Номер> [,<Обл>]) возвращает выражение фильтра
индекса, указанного <Номером>, в рабочей области <Обл> (в текущей
области, если аргумент <Обл> опущен).
    SYS (2022 [,<ВырC>]) возвращает размер (в байтах) кластера диска,
указанного обозначением <ВырC>, например "D" (диска по умолчанию, 
если <ВырC> опущено).
    SYS (2023) возвращает обозначение диска, например "D:", на 
котором размещаются временные файлы FOXPRO.
С.285 TAG([<Имя .CDX-файла>,] <Номер> [,<Обл>]) для указанной
аргументом <Обл> БД (для активной БД, если аргумент <Обл> опущен)
возвращает имя заданного <Номером> тега указанного .CDX-файла.
Если <Имя .CDX-файла> не указано, <Номер> воспринимается как
номер "сквозной" нумерации (см. п. 16.3) .IDX-файлов и тегов,
т.е. может возвращаться имя .IDX-файла.
С.21 TAN (<ВырN>) - тангенс угла <ВырN>, заданного в радианах.     
     TARGET (<Номер> [,<Обл>]) для указанной аргументом <Обл>
БД (для активной БД, если аргумент <Обл> опущен) возвращает как
строку алиас дочерней БД, который записан в отношении связи с 
заданным <Номером> (отношения связи нумеруются в порядке их 
установления). Если <Номер> ошибочен или нет связей, возвращается 
пустая строка.
     TIME ([<ВырN>]) в отсутствие аргумента и если действует 
установка SET HOURS TO 24, возвращает в виде строки "чч:мм:сс" 
системное время в пределах от 0 до 24 часов ("ч"- цифра часа, "м"
- минуты, "с" - секунды). При действии установки SET HOURS TO 12
(12-часовой цикл) в строку справа добавляется "am" или "pm", а при 
записи аргумента, хотя бы 1, секунды имеют сотые доли: "сс.сс".
С.43 TRANSFORM (<Выр>,<SAY-шаблон>) возвращает символьное представление
выражения <Выр>, отформатированное в соответствии с SAY-шаблоном.
С.25 TRIM (<ВырC>) возвращает копию строки<ВырC>, удалив в ней все 
ведущие пробелы.
С.30 TYPE ("<Выр>") возвращает символ, обозначающий тип значения
<Выр> (см. табл.1.3).
     UPDATED () возвращает значение .T., если при выполнении последней
команды READ значения GЕТ-полей изменялись (вы могли вернуться к
исходным значениям, но Update() фиксирует сам факт "вмешательства").
С.26 UPPER (<ВырC>) возвращает копию строки <ВырC>, в которой все
буквы прописные.
     USED ([<Обл>] возвращает .T. в случае, если открыта БД в
указанной аргументом (в текущей - если нет аргумента) рабочей области.
С.31 VAL (<ВырC>) возвращает число - итог преобразования цифрового
начала строки <ВырC> или 0, если строка начинается не с цифры.
     VERSION () возвращает в виде строки обозначение используемой
версии FOXPRO.
     WBORDER ([<ВырC>]) возвращает .T., если окно с именем <ВырC>
(текущее окно - в отсутствие аргумента) имеет рамку.
     WCHILD ([<ВырC>|<ВырN>]) имеет двоякий результат: а)если
указано имя <ВырC> окна, возвращается количество порожденных в нем
окон; б)если задано <ВырN> возвращается имя одного из порожденных 
окон: для <ВырN>=0 возвращается имя окна, нижнего в стеке окон, а 
для <ВырN> # 0 - имя очередного окна из стека. Последовательно 
используя функцию с ненулевым аргументом, можно получить имена всех 
окон, после чего функция выдает пустую строку при следующем 
обращении к ней. Это удобно для организации цикла.
С.308 WCOLS ([<ВырC>]) возвращает число колонок в окне с именем
<ВырC> (в текущем окне, если нет аргумента). Если окон нет,
возвращается число доступных колонок экрана.
С.308 WEXIST (<ВырC>) возвращает .T., если окно с именем <ВырC> 
было определено.
С.309 WLAST ([<ВырC>]) в отсутствие аргумента возвращает имя окна,
активированного непосредственно перед активацией действующего окна
выдачи, т.е. имя окна-преемника. Если есть аргумент <ВырC> - имя 
окна и это окно - преемник окна выдачи, возвращается .T..
С.308 WLCOL ([<ВырC>]) возвращает номер самой левой колонки окна с
именем <ВырC> (текущего окна выдачи, если имя не указано) 
относительно экрана. При позиционировании за пределами экрана
возвращается номер несуществующей колонки.
С.308 WLROW ([<ВырC>]) возвращает номер самой верхней строки окна
с именем <ВырC> (текущего окна выдачи, если имя не указано)
относительно экрана. При позиционировании окна за пределами
экрана возвращается номер несуществующей строки.
С.308 WMAXIMUM ([<ВырC>]) возвращает .T., если окно с именем <ВырC>
(окно переднего плана, если имя не задано) имеет размер MAX.
С.308 WMINIMUM ([<ВырC>]) возвращает .T., если окно с именем <ВырC>
(окно переднего плана, если имя не задано) имеет размер MIN.
С.308 WONTOP ([<ВырC>]) возвращает двоякий результат: а)значение .T.,
если окно с именем <ВырC> является окном переднего плана, иначе .F.;
б)имя окна переднего плана, если аргумент опущен.
С.308 WOUTPUT ([<ВырC>]) возвращает двоякий результат: а)значение .T.,
если окно с именем <ВырC> является текущим окном выдачи, иначе .F.;
б)имя текущего окна выдачи, если аргумент опущен; если текущим окном
выдачи является экран, возвращается пустая строка.
      WPARENT ([<ВырC>]) для окна с именем <ВырC> (окна переднего
плана, если имя не задано) возвращает имя "родительского" окна или
пустую строку - при порождении окна вне других окон.
      WREAD ([<ВырC>]) возвращает .T., если окно с именем <ВырC>
(окно переднего плана, если имя не задано) используется текущей
командой READ.
С.308 WROWS ([<ВырC>]) возвращает число строк в окне с именем <ВырC>          
(в текущем окне, если имя не задано). В отсутствие окон возвращается
число доступных строк экрана.
С.308 WTITLE ([<ВырC>]) возвращает заголовок (тип C) окна с именем
<ВырC> (окна переднего плана, если имя не задано).
      WVISIBLE (<ВырC>) возвращает .T., если окно с именем <ВырC>
было активировано и не скрыто.
С.23  YEAR (<ВырD>) возвращает номер года (тип N), извлеченный из
значения даты <ВырD>.
