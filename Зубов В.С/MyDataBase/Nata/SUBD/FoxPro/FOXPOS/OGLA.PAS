


         Часть 1. ИЗУЧАЕМ ОСНОВЫ ЯЗЫКОВ CLIPPER И FOXPRO

             1. РАССМАТРИВАЕМ ОБЩИЕ ЭЛЕМЕНТЫ ЯЗЫКОВ

  1.1. Структура языка. Правила записи
  1.2. Математические функции. Функция Inlist()
  1.3. Функции и команды для работы с датами.
       Операции с датами
  1.4. Строковые функции. Операции со строками
  1.5. Выражения. Условные выражения
  1.6. Тип выражения. Преобразования типа операндов.
       Звуковое сопровождение
  1.7. Ввод и присваивание значений переменным. Массивы
  1.8. Некоторые клавишные функции
  1.9. Операция макроподстановки
 1.10. Управляющие структуры. Операторы управления
 1.11. Блочная структура программ
 1.12. Области действия переменных.
       Сохранение в файле и восстановление переменных
 1.13. Вывод командами "?","??". Преобразования при выводе
 1.14. Ввод-вывод данных командами @ ...SAY ...GET
 1.15. Создаем световые меню - PROMPT-меню

         ЗАКЛЮЧЕНИЕ К 1-Й ГЛАВЕ. ЗАДАНИЯ

       2. ЗНАКОМИМСЯ С БАЗАМИ ДАННЫХ

  2.1. Типы полей, используемых в базах данных
  2.2. Создаем первую базу данных. Структура
  2.3. Активизируем базу данных и перемещаемся в ней.
       Закрываем базы данных
  2.4. Используем несколько баз данных
  2.5. Индексируем базы данных
  2.6. Модифицируем структуру базы данных. Связи баз данных
  2.7. Удаляем ненужные записи

         ЗАКЛЮЧЕНИЕ КО 2-Й ГЛАВЕ

       3. РАБОТАЕМ С БАЗАМИ ДАННЫХ


                             - 2 -
  3.1. Получаем справочную информацию о базах данных
  3.2. Применяем сложные индексные выражения
  3.3. Фильтры. Структура команд. Область действия
  3.4. Осуществляем поиск в базе данных
  3.5. Становимся "профессионалами" поиска
  3.6. Находим числовые характеристики. Команда SCAN
  3.7. Начинаем работать с MEMO-полями
  3.8. Переименовываем, стираем, копируем, уплотняем
       базы данных
  3.9. Выполняем сортировку записей базы данных
 3.10. Обеспечиваем взаимодействие баз данных
 3.11. Программно создаем и изменяем структуру баз данных

        ЗАКЛЮЧЕНИЕ К 3-Й ГЛАВЕ

     Часть 2. ПРОГРАММИРУЕМ НА ЯЗЫКЕ CLIPPER

       4. ПРОДОЛЖАЕМ ИЗУЧАТЬ CLIPPER

  4.1. Литеральные массивы. Alert-меню
  4.2. Изучаем блоки кода, функции Eval(), Aeval(), DBeval()
  4.3. Присваиваем значения внутри выражений
  4.4. Применяем переменные времени компиляции
  4.5. Гибко используем параметры блоков
  4.6. Блоки или блоки кода, что лучше ?
  4.7. Макроподстановки и расширенные выражения 
  4.8. Макроподстановки и блоки кода
  4.9. Объявления спецификаций FIELD, MEMVAR. Блочная
      структура многофайловых программ
  4.10. Воздействуем на SET-установки

       ЗАКЛЮЧЕНИЕ К 4-Й ГЛАВЕ

      5. ИЗУЧАЕМ ПРИМЕНЕНИЯ CLIPPER-МАССИВОВ

  5.1. Массив как копия базы данных
  5.2. Создаем и заполняем многомерные массивы
  5.3. Создаем и используем копии массивов
  5.4. Используем динамическую структуру
  5.5. Сортируем массивы по произвольному правилу

                             - 3 -
  5.6. Осуществляем поиск функцией Ascan()
  5.7. Универсальный блок быстрого поиска в массиве
  5.8. Вертикальные меню. Используем функцию Achoice()
  5.9. Используем массивы - описания структур баз данных

        ЗАКЛЮЧЕНИЕ К 5-Й ГЛАВЕ

      6. ИСПОЛЬЗУЕМ ВОЗМОЖНОСТИ КЛАВИАТУРЫ

  6.1. Знакомимся с буфером клавиатуры
  6.2. Используем функции Inkey(), Nextkey(), Lastkey()
  6.3. Команда SET FUNCTION. Функции Procname(),
      Procline(), Readvar().
  6.4. Назначаем "горячие" клавиши
  6.5. Безопасное применение SET-KEY-процедур
  6.6. Приобщаем Inkey(). Снимаем копии экрана

        ЗАКЛЮЧЕНИЕ К 6-Й ГЛАВЕ

      7. ОСВАИВАЕМ GET-СИСТЕМУ

  7.1. Знакомимся с понятиями GET-буфера и GET-объекта
  7.2. Упражняемся в использовании элементов GET
  7.3. Детально изучаем команду READ
  7.4. Используем команду READ с атрибутом SAVE
  7.5. Используем несколько GET-списков. Функция Readmodal()

        ЗАКЛЮЧЕНИЕ К 7-Й ГЛАВЕ

      8. РАБОТАЕМ С MEMO-ПОЛЯМИ И БОЛЬШИМИ СТРОКАМИ.
         РЕДАКТИРУЕМ БАЗУ ДАННЫХ

  8.1. Изучаем особенности редактирования больших строк
  8.2. Осваиваем функцию Memoedit()
  8.3. Работаем с Memo-буфером
  8.4. Применяем в Memoedit() пользовательские функции
  8.5. Дополнительные функции Mlctopos(), Mpostolc()
  8.6. Осуществляем поиск в MEMO-поле

        ЗАКЛЮЧЕНИЕ К 8-Й ГЛАВЕ

                             - 4 -

      9. РАЗРАБАТЫВАЕМ ИНТЕРФЕЙС ПОЛЬЗОВАТЕЛЯ

  9.1. Знакомимся с объектами TBrowse, TBColumn
  9.2. Организуем интерактивную работу с объектами-таблицами
  9.3. Просматриваем базы данных. Цвета изображения
  9.4. Просматриваем и редактируем массивы
  9.5. Задаем и сохраняем цветовые характеристики
  9.6. Очищаем, сохраняем и восстанавливаем области
      экрана.  Управляем курсором
  9.7. Обрамляем и оттеняем области экрана
  9.8. Создаем окна сообщений и предупреждений
  9.9. Работаем с радиоокнами, окнами выбора
  9.10. Строим комбинированные меню

        ЗАКЛЮЧЕНИЕ К 9-Й ГЛАВЕ

      10. ИСПОЛЬЗУЕМ ДОСТУП НИЗКОГО УРОВНЯ К ФАЙЛАМ

  10.1. Знакомимся с файловыми функциями
  10.2. Порождаем и обновляем двоичные файлы
  10.3. Защищаем файлы от несанкционированного доступа
  10.4. Сохраняем и восстанавливаем массивы
  10.5. Просматриваем большие текстовые файлы

        ЗАКЛЮЧЕНИЕ К 10-Й ГЛАВЕ

      11. ПРИМЕНЯЕМ ДИРЕКТИВЫ ПРЕПРОЦЕССОРА

  11.1. Знакомимся с директивами-определениями команд
  11.2. Изучаем примеры определения команд
  11.3. Создаем команды. Директива #Translate
  11.4. Команды и программные блоки
  11.5. Директивы #define и #include
  11.6. Директивы условной компиляции

        ЗАКЛЮЧЕНИЕ К 11-Й ГЛАВЕ

      12. ИСПОЛЬЗУЕМ CLIPPER СОВМЕСТНО С ЯЗЫКОМ C

  12.1. Организуем CLIPPER-C программу
  12.2. Подготавливаем CLIPPER-C программу к выполнению
  12.3. Передаем в C массивы. Проверяем тип
  12.4. Используем динамическую память и параметры,
       передаваемые по ссылке
  12.5. Пример CLIPPER-C программы

        ЗАКЛЮЧЕНИЕ К 12-Й ГЛАВЕ

     13. ИЗУЧАЕМ ПРОЦЕССЫ КОМПИЛЯЦИИ И КОМПОНОВКИ

  13.1. Компилируем многофайловые программы
  13.2. Изучаем переменные окружения и опции компилятора
  13.3. Используем компоновщик. Библиотеки
  13.4. Изучаем правила обращения к компоновщику
  13.5. Создаем и используем библиотеки предкомпоновки
  13.6. Создаем сценарий обработки. Утилита RMAKE

        ЗАКЛЮЧЕНИЕ К 13-Й ГЛАВЕ

     14. ИСПОЛЬЗУЕМ ОТЛАДЧИК  CLD.EXE

  14.1. Знакомимся с приемами отладки
  14.2. Управляем работой отладчика
  14.3. Используем окно команд и окно программы
  14.4. Наблюдаем и изменяем данные
  14.5. Получаем информацию о базах данных.
       Выходим в DOS
  14.6. Используем режим анимации и точки трассировки.
       Script-файлы

        ЗАКЛЮЧЕНИЕ К 14-Й ГЛАВЕ
